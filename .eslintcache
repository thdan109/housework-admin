[{"E:\\Final\\LV\\react-browser\\src\\index.js":"1","E:\\Final\\LV\\react-browser\\src\\reportWebVitals.js":"2","E:\\Final\\LV\\react-browser\\src\\App.js":"3","E:\\Final\\LV\\react-browser\\src\\components\\bootstrap.js":"4","E:\\Final\\LV\\react-browser\\src\\pages\\BrowserHeaderAdmin.js":"5","E:\\Final\\LV\\react-browser\\src\\components\\AdminServiceManagement.js":"6","E:\\Final\\LV\\react-browser\\src\\pages\\loginAdmin.Page.js":"7","E:\\Final\\LV\\react-browser\\src\\components\\test.js":"8","E:\\Final\\LV\\react-browser\\src\\components\\CustomerHeader.js":"9","E:\\Final\\LV\\react-browser\\src\\components\\StaffManangent.js":"10","E:\\Final\\LV\\react-browser\\src\\components\\CustomerManagement.js":"11","E:\\Final\\LV\\react-browser\\src\\components\\AdminOrderManagement.js":"12","E:\\Final\\LV\\react-browser\\src\\components\\CookingService.js":"13","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackAdmin.js":"14","E:\\Final\\LV\\react-browser\\src\\components\\getDataStaffFree.js":"15","E:\\Final\\LV\\react-browser\\src\\components\\ModalAssignment.js":"16","E:\\Final\\LV\\react-browser\\src\\components\\ClearService.js":"17","E:\\Final\\LV\\react-browser\\src\\components\\ModalClear.js":"18","E:\\Final\\LV\\react-browser\\src\\components\\WashingService.js":"19","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalWashing.js":"20","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalChangeService.js":"21","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddService.js":"22","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddStaff.js":"23","E:\\Final\\LV\\react-browser\\src\\components\\AdminStatisticalManagement.js":"24","E:\\Final\\LV\\react-browser\\src\\components\\CookingSaveService.js":"25","E:\\Final\\LV\\react-browser\\src\\components\\ClearSaveService.js":"26","E:\\Final\\LV\\react-browser\\src\\components\\WashingSaveService.js":"27","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackFromCustomer.js":"28","E:\\Final\\LV\\react-browser\\src\\components\\ReportStaff.js":"29","E:\\Final\\LV\\react-browser\\src\\components\\SalaryStaff.js":"30","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalUpdateSalary.js":"31"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2749,"mtime":1619857305149,"results":"35","hashOfConfig":"33"},{"size":46,"mtime":1612539728153,"results":"36","hashOfConfig":"33"},{"size":3230,"mtime":1619831285772,"results":"37","hashOfConfig":"33"},{"size":5417,"mtime":1617869418918,"results":"38","hashOfConfig":"33"},{"size":2070,"mtime":1615133772662,"results":"39","hashOfConfig":"33"},{"size":8459,"mtime":1619855742823,"results":"40","hashOfConfig":"33"},{"size":166,"mtime":1613874093864,"results":"41","hashOfConfig":"33"},{"size":5505,"mtime":1618165282233,"results":"42","hashOfConfig":"33"},{"size":5313,"mtime":1619752095330,"results":"43","hashOfConfig":"33"},{"size":3704,"mtime":1619415100845,"results":"44","hashOfConfig":"33"},{"size":6919,"mtime":1619769824504,"results":"45","hashOfConfig":"33"},{"size":1382,"mtime":1616900556634,"results":"46","hashOfConfig":"33"},{"size":1387,"mtime":1616914095844,"results":"47","hashOfConfig":"33"},{"size":3439,"mtime":1618819910797,"results":"48","hashOfConfig":"33"},{"size":6510,"mtime":1619750963858,"results":"49","hashOfConfig":"33"},{"size":3417,"mtime":1619076764780,"results":"50","hashOfConfig":"33"},{"size":7009,"mtime":1619192845724,"results":"51","hashOfConfig":"33"},{"size":3498,"mtime":1618803571486,"results":"52","hashOfConfig":"33"},{"size":4331,"mtime":1619887513646,"results":"53","hashOfConfig":"33"},{"size":6120,"mtime":1619434966121,"results":"54","hashOfConfig":"33"},{"size":7609,"mtime":1618175862444,"results":"55","hashOfConfig":"33"},{"size":3542,"mtime":1619426181631,"results":"56","hashOfConfig":"33"},{"size":5841,"mtime":1619425687238,"results":"57","hashOfConfig":"33"},{"size":5621,"mtime":1619425661867,"results":"58","hashOfConfig":"33"},{"size":5681,"mtime":1619425948300,"results":"59","hashOfConfig":"33"},{"size":5010,"mtime":1619852347632,"results":"60","hashOfConfig":"33"},{"size":5032,"mtime":1619856214432,"results":"61","hashOfConfig":"33"},{"size":6038,"mtime":1619886245561,"results":"62","hashOfConfig":"33"},{"size":5233,"mtime":1619887647824,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ckdpz6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"66"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},"E:\\Final\\LV\\react-browser\\src\\index.js",[],["147","148"],"E:\\Final\\LV\\react-browser\\src\\reportWebVitals.js",[],"E:\\Final\\LV\\react-browser\\src\\App.js",["149","150","151"],"E:\\Final\\LV\\react-browser\\src\\components\\bootstrap.js",[],"E:\\Final\\LV\\react-browser\\src\\pages\\BrowserHeaderAdmin.js",["152","153","154","155","156","157"],"E:\\Final\\LV\\react-browser\\src\\components\\AdminServiceManagement.js",["158"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport ModalChangeService from './modals/ModalChangeService'\r\nimport ModalAddService from './modals/ModalAddService'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  ServiceManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = async() =>{\r\n      console.log('GetDataService');\r\n      Axios.get('http://localhost:216/service/dataService').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   \r\n   const  [columns, setColumns] = useState([\r\n      // { title: 'Action', render: rowData =>(\r\n      //    <>   \r\n      //       <ModalAddService/>\r\n      //    </>\r\n      //    )\r\n      // },\r\n      { title: 'Id dịch vụ', field: '_id' },\r\n      { title: 'Tên dịch vụ', field: 'nameService' },\r\n      { title: 'Mô tả dịch vụ', field: 'descriptionService'},\r\n      { title: 'Giá dịch vụ', field: 'prince', render: rowData=>(\r\n         rowData.prince.map(dt => <p>{dt}</p> )\r\n      )},\r\n      { title: '', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalChangeService data={{id: rowData._id}} />\r\n         </>\r\n      )},\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n \r\n   return (\r\n   <div>\r\n      {/* <button onClick={()=>console.log(data)}>aaaaaaaaaaaaaaaa</button> */}\r\n      <ModalAddService />\r\n      <MaterialTable\r\n      title=\"Quản lý Dịch vụ\"\r\n      icons={tableIcons}\r\n      columns={columns}\r\n      data={data}\r\n      editable={{\r\n      // onRowAdd: newData =>\r\n      //      new Promise((resolve, reject) => {\r\n      //        setTimeout(() => {\r\n      //          setData([...data, newData]);\r\n      //          Axios.post('http://localhost:216/service/addService', \r\n      //             newData\r\n      //          )\r\n      //          resolve();\r\n      //        }, 1000)\r\n            \r\n      //      }),\r\n         // onRowUpdate: (newData, oldData) =>\r\n         //   new Promise((resolve, reject) => {\r\n         //     setTimeout(() => {\r\n         //       const dataUpdate = [...data];\r\n         //       const index = oldData.tableData.id;\r\n         //       dataUpdate[index] = newData;\r\n         //       setData([...dataUpdate]);\r\n         //          Axios.post('http://localhost:216/service/updatedataService',\r\n         //             newData\r\n         //          )\r\n         //       resolve();\r\n         //     }, 1000)\r\n         //   }),\r\n         //   onRowDelete: oldData =>\r\n         //   new Promise((resolve, reject) => {\r\n         //       setTimeout(() => {\r\n         //           const dataDelete = [...data];\r\n         //           const index = oldData.tableData.id;\r\n         //           dataDelete.splice(index, 1);\r\n         //           setData([...dataDelete]);\r\n         //             const idService = oldData._id;\r\n         //             Axios.get('http://localhost:216/service/delService/id='+idService).then(res =>{\r\n         //                // getDataStaff()\r\n         //             })\r\n         //           resolve();\r\n         //       }, 1000);\r\n         //   })\r\n         }}\r\n     />\r\n   </div>\r\n   )\r\n }\r\n\r\n\r\n export default ServiceManagement;","E:\\Final\\LV\\react-browser\\src\\pages\\loginAdmin.Page.js",["159","160","161","162"],"import React, { useState, useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Button , TextField} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport  '../styles/LoginAdmin.css';\r\n\r\n\r\nconst LoginAdmin = (props) =>{\r\n   const history = useHistory()\r\n   useEffect(()=>{\r\n      if (Cookies.get('IdAdmin')){\r\n         props.history.push('/admin')\r\n      }\r\n   },[])\r\n   const LoginAdmin = (e) =>{\r\n      e.preventDefault();\r\n      const {usernameEntered, passwordEntered } = e.target;\r\n      Axios.post('http://localhost:216/admin', {\r\n         username: usernameEntered.value,\r\n         password: passwordEntered.value\r\n      }).then(res =>{\r\n         if (res.data.id){\r\n            Cookies.set('IdAdmin',res.data.id,{expires: 7})\r\n            Cookies.set('Position',res.data.position,{expires: 7})\r\n            Cookies.set('NameAdmin',res.data.name, {expires: 7})\r\n            window.location.reload(1)\r\n         }else{\r\n            window.location.reload(1) \r\n         }\r\n      })\r\n   }\r\n\r\n   return(\r\n\r\n      <div className='ContainerLoginAdmin'>\r\n         <div className='LoginAdmin'>\r\n            <div className='TitleLoginAdmin'>\r\n               LOGIN\r\n            </div>\r\n               <form onSubmit={(e)=>LoginAdmin(e)} noValidate  autoComplete=\"off\" >\r\n                  <div className='TextfieldUsername'>\r\n                     <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name='usernameEntered' />\r\n                  </div>\r\n                  <div className='TextfieldPassword'>\r\n                     <TextField id=\"outlined-basic\" type='password' label=\"Password\" variant=\"outlined\" name='passwordEntered'/>\r\n                  </div>\r\n                  {/* <div className='ButtonLogIn'> */}\r\n                     <Button className='btnlogin' type='sunmit'>LOGIN</Button>\r\n                  {/* </div> */}\r\n               </form>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n   \r\n\r\n}\r\n\r\nexport default LoginAdmin;","E:\\Final\\LV\\react-browser\\src\\components\\test.js",["163","164","165","166","167","168","169","170","171","172","173"],"E:\\Final\\LV\\react-browser\\src\\components\\CustomerHeader.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\StaffManangent.js",["174","175"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport ModalAddStaff from './modals/ModalAddStaff'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  StaffManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('GetDataStaff');\r\n      Axios.get('http://localhost:216/staff/dataStaff').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n     { title: 'Họ và Tên', field: 'fullnameStaff' },\r\n     { title: 'Tên đăng nhập', field: 'usernameStaff'},\r\n   //   { title: 'Mật khẩu', field: 'passwordStaff' },\r\n     { title: 'Ngày sinh', field: 'birthdayStaff', type: 'date'},\r\n     { title: 'Số điện thoại', field: 'numberPhone', type: 'numberic'},\r\n     { title: 'Địa chỉ', field: 'addressStaff'},\r\n     { title: 'Số CMND', field: 'IDCardStaff'},\r\n     { title: 'Giới tính', field: 'sex'},\r\n     { title: \"Nơi sinh\", field: 'birthPlace'},\r\n     { title: 'Bộ phận',  field: 'department'},\r\n     { title: 'Ngày tham gia',  field: 'joinDay', type: 'date'}\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n\r\n   const addStaff = () =>{\r\n      console.log('aaaaaaa');\r\n   }\r\n \r\n   return (\r\n      <div>\r\n         <ModalAddStaff  />\r\n         <MaterialTable\r\n            title=\"Quản lý Nhân sự\"\r\n            icons={tableIcons}\r\n            columns={columns}\r\n            data={data}\r\n            editable={{\r\n               // onRowAdd: newData =>\r\n               //   new Promise((resolve, reject) => {\r\n               //     setTimeout(() => {\r\n               //       setData([...data, newData]);\r\n               //       Axios.post('http://localhost:216/staff/addStaff', \r\n               //          newData\r\n               //       )\r\n               //       resolve();\r\n               //     }, 1000)\r\n                  \r\n               //   }),\r\n               onRowUpdate: (newData, oldData) =>\r\n               new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                     const dataUpdate = [...data];\r\n                     const index = oldData.tableData.id;\r\n                     dataUpdate[index] = newData;\r\n                     setData([...dataUpdate]);\r\n                        Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                           newData\r\n                        )\r\n                     resolve();\r\n                  }, 1000)\r\n               }),\r\n               onRowDelete: oldData =>\r\n               new Promise((resolve, reject) => {\r\n                     setTimeout(() => {\r\n                        const dataDelete = [...data];\r\n                        const index = oldData.tableData.id;\r\n                        dataDelete.splice(index, 1);\r\n                        setData([...dataDelete]);\r\n                           const idStaff = oldData._id;\r\n                           Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n                              // getDataStaff()\r\n                           })\r\n                        resolve();\r\n                     }, 1000);\r\n               })\r\n               }}\r\n         />\r\n      </div>\r\n   )\r\n }\r\n\r\n\r\n export default StaffManagement;","E:\\Final\\LV\\react-browser\\src\\components\\CustomerManagement.js",["176"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\nimport '../styles/CustomerManager.css'\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CustomerManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('GetDataStaff');\r\n      Axios.get('http://localhost:216/user/dataUser').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n     { title: 'Họ và Tên', field: 'fullname' },\r\n     { title: 'Tên đăng nhập', field: 'username'},\r\n     { title: 'Mật khẩu', field: 'password' },\r\n     { title: 'Ngày sinh', field: 'birthday', type: 'date'},\r\n     { title: 'Địa chỉ', field: 'address'},\r\n     { title: 'Số CMND', field: 'IDCard'},\r\n     { title: 'Giới tính', field: 'sex'},\r\n     { title: \"Email\", field: 'email'},\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n \r\n   return (\r\n      <div className='TableCustomer'>\r\n         <div className='Table'>\r\n         <MaterialTable\r\n            title=\"Quản lý Khách Hàng\"\r\n            icons={tableIcons}\r\n            columns={columns}\r\n            data={data}\r\n            editable={{\r\n               // onRowAdd: newData =>\r\n               //   new Promise((resolve, reject) => {\r\n               //     setTimeout(() => {\r\n               //       setData([...data, newData]);\r\n               //       // Axios.post('http://localhost:216/staff/addStaff', \r\n               //       //    newData\r\n               //       // )\r\n               //       resolve();\r\n               //     }, 1000)\r\n                  \r\n               //   }),\r\n               // onRowUpdate: (newData, oldData) =>\r\n               //   new Promise((resolve, reject) => {\r\n               //     setTimeout(() => {\r\n               //       const dataUpdate = [...data];\r\n               //       const index = oldData.tableData.id;\r\n               //       dataUpdate[index] = newData;\r\n               //       setData([...dataUpdate]);\r\n               //          // Axios.post('http://localhost:216/staff/updatedataStaff',\r\n               //          //    newData\r\n               //          // )\r\n               //       resolve();\r\n               //     }, 1000)\r\n               //   }),\r\n               onRowDelete: oldData =>\r\n               new Promise((resolve, reject) => {\r\n                     setTimeout(() => {\r\n                        const dataDelete = [...data];\r\n                        const index = oldData.tableData.id;\r\n                        dataDelete.splice(index, 1);\r\n                        setData([...dataDelete]);\r\n                           const idUSer = oldData._id;\r\n                           Axios.get('http://localhost:216/user/delUser/id='+idUSer).then(res =>{\r\n                              // getDataStaff()\r\n                           })\r\n                        resolve();\r\n                     }, 1000);\r\n               })\r\n               }}\r\n         />\r\n         </div>\r\n         \r\n      </div>\r\n   )\r\n  \r\n }\r\n\r\n\r\n export default CustomerManagement;","E:\\Final\\LV\\react-browser\\src\\components\\AdminOrderManagement.js",["177","178","179","180","181","182","183","184"],"import React from 'react'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nimport OrderScreen from './CookingService'\r\nimport ClearScreen from './ClearService'\r\nimport WashingComponent from './WashingService'\r\n\r\nimport '../styles/OrderAdmin.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n      selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n}));\r\n\r\nconst AdminOrder = () =>{\r\n\r\n   \r\n   const [state, setState] = React.useState({\r\n      order: '',\r\n      name: 'hai',\r\n    });\r\n   const [type, setType] = React.useState({\r\n      cooking: true,\r\n      housework: null,\r\n      washing: null,\r\n      farm: null\r\n   })\r\n   const classes = useStyles();\r\n   const handleChange = (event) => {\r\n      const name = event.target.name;\r\n      setState({\r\n        ...state,\r\n        [name]: event.target.value,\r\n      });\r\n      const option_val = event.target.value\r\n      if (option_val == 1){\r\n         setType({\r\n            cooking:true,\r\n            housework: null,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 2 ){\r\n         setType({\r\n            cooking:null,\r\n            housework: true,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val==3){\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: true,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 4)\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: null,\r\n            farm: true\r\n         })\r\n   }\r\n\r\n\r\n   return(\r\n      <div className=\"ContainerAdminOrder\">\r\n         <h2></h2>\r\n         <div className='OptionOrder'>\r\n            \r\n            <FormControl className={classes.formControl}>\r\n               <InputLabel shrink htmlFor=\"age-native-label-placeholder\" >\r\n                 Chọn dịch vụ\r\n               </InputLabel>\r\n               <NativeSelect\r\n                  style={{fontSize: 18}}\r\n                  className='options'\r\n                  value={state.order}\r\n                  onChange={handleChange}\r\n                  inputProps={{\r\n                     name: 'order',\r\n                     id: 'age-native-label-placeholder',\r\n                  }}\r\n               >\r\n                  <option value={1}>Nấu ăn</option>\r\n                  <option value={2}>Dọn dẹp nhà</option>\r\n                  <option value={3}>Giặt ủi</option>\r\n                  {/* <option value={4}>--------</option> */}\r\n                  \r\n               </NativeSelect>\r\n               {/* <FormHelperText>Label + placeholder</FormHelperText> */}\r\n            </FormControl>\r\n         </div>\r\n      \r\n         <div className='ContainerTable'>\r\n            {\r\n               \r\n               (type.cooking === true)?\r\n                  <OrderScreen /> \r\n               :           \r\n               (type.housework == true)?\r\n                  // <div>a2</div>\r\n                  <ClearScreen />\r\n               :\r\n               (type.washing === true)?\r\n                  <WashingComponent/>\r\n               :\r\n               // (type.farm === true)?\r\n               // <div>a4</div>\r\n               // : \r\n               <div>kcj</div>\r\n            }\r\n         </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AdminOrder","E:\\Final\\LV\\react-browser\\src\\components\\CookingService.js",["185","186","187","188"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CookingOrder = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataOrder();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataOrder = () =>{\r\n      Axios.get('http://localhost:216/cooking/dataCooking').then(res =>{\r\n         setData(res.data)  \r\n      })  \r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/cooking/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getDataOrder()\r\n      }\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Số người ăn\", field: 'number'},\r\n      { title: 'Món ăn', field: 'dishList', render: rowData =>\r\n         rowData.dishList.map((dt, index)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Nhân viên' , field: 'staff', render: rowData=>\r\n         rowData.staff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Đi chợ', field: 'goMarket'},\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Trạng thái', field: 'status', render: rowData => (\r\n         <>\r\n             <select onChange={(e)=>handleChangeStatus(e)} style={{ borderWidth:  0, fontSize: 14}}>\r\n               <option>{rowData.status}</option>\r\n               <option id={rowData._id} value=\"0\">Xác nhận</option>\r\n               <option id={rowData._id} value=\"1\">Đang thực hiện</option>\r\n               {/* <option id={rowData._id} value=\"2\">Đã thanh toán</option> */}\r\n             </select>\r\n         </>\r\n       )},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalAssignment data={[{time:rowData.timeStart}, {date:rowData.date}, {idUser: rowData.idUser}, {id: rowData._id}]} />\r\n         </>\r\n       )},\r\n      //  { title: 'Xử lý', field: 'dataStaff.arrs',render: rowData => (\r\n      //    <>\r\n      //       <AddBox style={{color: 'blue'}} onClick={( ) => submitSave(rowData._id)} />\r\n      //    </>\r\n      //  )},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   const [dataStaff, setDataStaff] = useState({\r\n      arrs: []\r\n   })\r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Quản lý Dịch vụ Nấu ăn\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default CookingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackAdmin.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\getDataStaffFree.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\ModalAssignment.js",["189","190","191","192"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalAssignment = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    Axios.post('http://localhost:216/cooking/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('aaa')\r\n      const data = props.data\r\n      Axios.post('http://localhost:216/staff/statusStaffCooking', {\r\n         dttime: data\r\n      }).then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/cooking/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n \r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e)=>Send(e)}>Chọn</Button>{' '}\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalAssignment","E:\\Final\\LV\\react-browser\\src\\components\\ClearService.js",["193","194"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalClear from './ModalClear'\r\nimport axios from 'axios';\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const ClearOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n   const [data, setData] = useState([]);\r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/clear/getData')\r\n      setData(data.data)\r\n   }\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await axios.post('http://localhost:216/clear/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getData()\r\n      }\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'username' },\r\n      { title: \"Diện tích\", field: 'area'},\r\n      { title: 'Giờ làm', field: 'timeWork'},\r\n      { title: 'Nhân viên' , field: 'nameStaff', \r\n         render: rowData=>\r\n            rowData.nameStaff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      \r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Trạng thái', field: 'status', render: rowData => (\r\n         <>\r\n             <select onChange={(e)=>handleChangeStatus(e)} style={{ borderWidth:  0, fontSize: 14}}>\r\n               <option>{rowData.status}</option>\r\n               <option id={rowData._id} value=\"0\">Xác nhận</option>\r\n               <option id={rowData._id} value=\"1\">Đang thực hiện</option>\r\n               {/* <option id={rowData._id} value=\"2\">Đã thanh toán</option> */}\r\n             </select>\r\n         </>\r\n       )},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalClear data={[{time:rowData.timeStart}, {date:rowData.date}, {id: rowData._id}, {idUser: rowData.idUser}]} />\r\n         </>\r\n       )},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Quản lý Dịch vụ Dọn dẹp nhà\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default ClearOrder;","E:\\Final\\LV\\react-browser\\src\\components\\ModalClear.js",["195","196","197","198"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalClear = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    Axios.post('http://localhost:216/clear/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      // console.log('aaa')\r\n      const data = props.data\r\n      Axios.post('http://localhost:216/staff/statusStaff', {\r\n         dttime: data\r\n      }).then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/clear/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e) => Send(e)}>Chọn</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalClear","E:\\Final\\LV\\react-browser\\src\\components\\WashingService.js",["199","200"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalWashing from './modals/ModalWashing'\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const WashingOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n\r\n\r\n   const [data, setData] = useState([]);\r\n   \r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/washing/getData')\r\n      // console.log(data.data);\r\n      setData(data.data)\r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/washing/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getData()\r\n      }\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Ngày gửi\", field: 'dateSend', type: 'date'},\r\n      { title: 'Giờ gửi', field: 'timeSend'},\r\n      { title: \"Ngày nhận\", field: 'dateTake', type: 'date'},\r\n      { title: 'Giờ nhận', field: 'timeTake'},\r\n      { title: 'Nhân viên', field: 'staff' ,\r\n         render: rowData=>\r\n            rowData.staff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Ghi chú', field: 'note'},\r\n      { title: 'Trạng thái', field: 'status', render: rowData => (\r\n         <>\r\n             <select onChange={(e)=>handleChangeStatus(e)} style={{ borderWidth:  0, fontSize: 14}}>\r\n               <option>{rowData.status}</option>\r\n               {/* <option id={rowData._id} value=\"0\">Đang chờ xác nhận</option> */}\r\n               <option id={rowData._id} value=\"0\">Đã Xác nhận</option>\r\n               <option id={rowData._id} value=\"2\">Đã đến</option>\r\n               <option id={rowData._id} value=\"1\">Đang thực hiện</option>\r\n               {/* <option id={rowData._id} value=\"2\">Đã thanh toán</option> */}\r\n             </select>\r\n         </>\r\n       )},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalWashing \r\n               data={[\r\n                  { timeSend: rowData.timeSend },\r\n                  { timeTake: rowData.timeTake }, \r\n                  { dateSend: rowData.dateSend }, \r\n                  { dateTake: rowData.dateTake },\r\n                  { idUser: rowData.idUser},\r\n                  { id: rowData._id},                 \r\n               ]} \r\n            />\r\n         </>\r\n       )},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Giặt ủi\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default WashingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalWashing.js",["201","202","203","204"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalWashing = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    console.log(datatime);\r\n   //    Axios.post('http://localhost:216/washing/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      // console.log('aaa')b\r\n      const data = props.data\r\n      console.log(data);\r\n      Axios.post('http://localhost:216/staff/statusStaffWash', {\r\n         dttime: data\r\n      })\r\n      .then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/washing/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n\r\n\r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e)=>Send(e)}>Chọn</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalWashing","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalChangeService.js",["205","206","207","208","209"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text ,Label} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalChangeService.css'\r\nimport { Checkbox } from '@material-ui/core';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalChangeService = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      // getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [dataUpdate, setDataUpdate] = React.useState([  ])\r\n   \r\n\r\n   const getDataServiceById = async() =>{\r\n      // console.log('aaa')\r\n      const id = props.data.id\r\n      console.log(id);\r\n      await axios.get('http://localhost:216/service/dataServiceByID/id='+id)\r\n      .then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = async( e ) =>{\r\n      console.log(e.target.value)\r\n      setDataUpdate({\r\n         ...dataUpdate,\r\n         [e.target.id] : e.target.value\r\n      })\r\n   }\r\n\r\n   const sendDataUpdateById = async( ) =>{\r\n      const id = props.data.id\r\n      const dataSendUpdate = dataUpdate\r\n      await axios.post('http://localhost:216/service/updataService',{\r\n         id : id,\r\n         data :dataSendUpdate\r\n      }).then(res =>{\r\n         if (res.data.Update === 'Oke'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Cập nhật!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n          \r\n         }\r\n      })\r\n      \r\n      \r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <Button color=\"primary\" \r\n            onClick={()=>{toggle()\r\n            getDataServiceById()}\r\n         }>Cập nhật</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader  toggle={toggle}>Cập nhật dịch vụ</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  <div>\r\n                     {/* <div className='divContainerInput'>\r\n                        <div className='TitleName'>ID dịch vụ</div>\r\n                        <Input placeholder=\"Aaaaaaaaaa\" className='Input' /> \r\n                     </div> */}\r\n                     <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Tên dịch vụ</Label>\r\n                        <Input placeholder={state.nameService } id='nameService' onChange={(val) => handleChange(val)}  className='Input'/> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Mô tả</Label>\r\n                        <Input type=\"textarea\" id='description' onChange={(val) => handleChange(val)} placeholder={state.descriptionService} style={{ height: 100 }} /> \r\n                     </div>\r\n                     {\r\n                        (state.prince) &&\r\n                        state.prince.map((dt,index) =>\r\n                           <div className='divContainerInput'>\r\n                              <Label className='TitleName'>Chỉ tiêu : giá</Label>\r\n                              <Input placeholder={dt} id={index+1} onChange={(val) => handleChange(val)}  className='Input'/> \r\n                           </div>   \r\n                        )\r\n                     }\r\n                  </div>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={()=>{\r\n                     // toggle()\r\n                     sendDataUpdateById()\r\n               }}>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n               <Button color=\"primary\" onClick={()=>console.log(dataUpdate)}>Đồng ý</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalChangeService","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddService.js",["210","211","212","213"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text, Label, Row, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalAddService.css';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Close from '@material-ui/icons/Close'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalChangeService = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   \r\n   const [arrayInput, setArrayInput] = React.useState([]);\r\n   const [text, setText] = React.useState(\"\");\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      setModal(!modal)\r\n      // AddService()\r\n   } \r\n\r\n   const [ state, setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n  \r\n   const handleChange = (value, index) => {\r\n      var a = [...arrayInput];\r\n      a[Number(index)].value = value.target.value;\r\n      setArrayInput(a);\r\n      console.log(arrayInput);\r\n      setText(index + \" with value: \" + value.target.value);\r\n   }\r\n\r\n   const handleChangeDel = (index) => {\r\n      var a = [...arrayInput];\r\n      a.splice(index, 1);\r\n      setArrayInput(a);\r\n      // console.log(arrayInput);\r\n   }\r\n\r\n   const handleChangeText = async(e)  =>{\r\n      // console.log(e.target.value);\r\n      setState({\r\n         ...state,\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n\r\n   const AddService = async() =>{\r\n      await axios.post('http://localhost:216/service/addService',{\r\n         dataSend: state,\r\n         price: arrayInput\r\n      }).then(res =>{\r\n         if (res.data.st === 'Oke'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Thêm!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n          \r\n         }\r\n      })\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         <Row style={{marginBottom: 25}}>\r\n            <AddBox style={{marginLeft: 18, color: 'blue',fontSize: 28 }} onClick={()=>toggle()} /><span > Thêm dịch vụ</span>\r\n         </Row>\r\n         {/* <Button color=\"primary\" >Cập nhật</Button> */}\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Thêm dịch vụ</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  <div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Tên dịch vụ</div>\r\n                        <Input placeholder=\"\" className='Input' id='nameService' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Loại dịch vụ</div>\r\n                        <Input placeholder=\"\" className='Input' id='type' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Mô tả</Label>\r\n                        <Input type=\"textarea\" placeholder=\"\" style={{ height: 100 }} id='discription' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='divInputPrice' >\r\n                           <Row>\r\n                              <Col md={11}>\r\n                                 <div>\r\n                                    <Label className='TitleName'>Giá (Chỉ tiêu : Giá)</Label>\r\n                                    <Input onChange={(e)=>handleChangeText(e)} id='value'  />\r\n                                 </div>\r\n                                 \r\n                              </Col>\r\n                           </Row>\r\n                        </div>\r\n                     </div>\r\n                  \r\n                     {arrayInput?.map((value, index) => (\r\n                        <div key={index} className='divInputPrice'>\r\n                           <Row>\r\n                              <Col md={11}>\r\n                                 <div>\r\n                                    <Label className='TitleName'>Giá (Chỉ tiêu : Giá)</Label>\r\n                                    <Input \r\n                                       // onChange={(e)=>handleChangeText(e)} \r\n                                       id={index}\r\n                                       value={arrayInput[index]?.value}\r\n                                       onChange={(value) => handleChange(value, index)}\r\n                                    />\r\n                                 </div>                                 \r\n                              </Col>\r\n                              <Col md={0.5} >\r\n                                 <div style={{ marginTop: 35}}>\r\n                                    <Close style={{ color: 'red',fontSize: 27 }} onClick={()=> handleChangeDel(index)} />\r\n                                 </div>\r\n                              </Col>\r\n                           </Row>\r\n                           <br></br>\r\n                        </div>\r\n                        ))}\r\n                        <AddBox style={{marginTop: 18, color: 'blue',fontSize: 27 }} onClick={() => setArrayInput((preState) => [...preState, {}])} />\r\n                        {/* <button onClick={() => console.log(text)}>Show</button> */}\r\n                  </div>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={\r\n                     ()=>{ toggle()\r\n                     AddService()}\r\n                  }>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalChangeService","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddStaff.js",["214","215","216","217","218","219","220"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text, Label, Row, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalAddService.css';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Close from '@material-ui/icons/Close'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalAddStaff = ( props ) =>{\r\n   \r\n   const [text, setText] = React.useState(\"\");\r\n   const [modal, setModal] = React.useState(false);\r\n   \r\n   const toggle = () =>{\r\n      setModal(!modal)\r\n   } \r\n   const [selectedFile, setSelectedFile] = React.useState();\r\n   const [ state, setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const handleChangeText = async(e)  =>{\r\n      setState({\r\n         ...state,\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n\r\n   const handleChangeFile = (e) => {\r\n      setSelectedFile(e.target.files[0])\r\n\t};\r\n\r\n   const AddStaff = async() =>{\r\n      // console.log(state);\r\n      const config = {     \r\n         headers: { 'content-type': 'multipart/form-data' }\r\n      }\r\n      const formData = new FormData();\r\n\t\tformData.append('files', selectedFile);\r\n\t\t// formData.forEach(state);\r\n      for ( var key in state ) {\r\n         formData.append(key, state[key]);\r\n      }\r\n      await axios.post('http://localhost:216/staff/addStaff',formData,config).then(res =>{\r\n         if (res.data.status === 'Oke'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Thêm!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n         }else{\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'error',\r\n               title: 'Lỗi!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          })\r\n         }\r\n      })\r\n\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         <Row style={{marginBottom: 25}}>\r\n            <AddBox style={{marginLeft: 18, color: 'blue',fontSize: 28 }} onClick={()=>toggle()} /><span style={{fontWeight: 'bold', marginLeft: 5}} > Thêm nhân viên</span>\r\n         </Row>\r\n         {/* <Button color=\"primary\" >Cập nhật</Button> */}\r\n         <Modal isOpen={modal} toggle={toggle} >\r\n         <ModalHeader toggle={toggle}>Thêm nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  <div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Tên nhân viên</div>\r\n                        <Input placeholder=\"\" className='Input' id='fullnameStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Ảnh nhân viên</div>\r\n                        <Input placeholder=\"\" type='file' className='Input' id='avatarStaff' onChange={(e)=>handleChangeFile(e)} /> \r\n                     </div>\r\n                     {/* <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Mô tả</Label>\r\n                        <Input type=\"textarea\" placeholder=\"\" style={{ height: 100 }} id='discription' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div> */}\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Tên đăng nhập</div>\r\n                        <Input placeholder=\"\" className='Input' id='usernameStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Mật khẩu</div>\r\n                        <Input placeholder=\"\" className='Input' id='passwordStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Giới tính</div>\r\n                        <Input placeholder=\"\" type='select' className='Input' id='genderStaff' onChange={(e)=>handleChangeText(e)}>\r\n                           <option>Chọn giới tính</option>   \r\n                           <option>Nam</option>   \r\n                           <option>Nữ</option>   \r\n                           <option>Khác</option>   \r\n                        </Input> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Ngày Sinh</div>\r\n                        <Input placeholder=\"\" className='Input' id='birthdayStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Nơi Sinh</div>\r\n                        <Input placeholder=\"\" className='Input' id='birthPlace' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Số điện thoại</div>\r\n                        <Input placeholder=\"\" className='Input' id='numberPhone' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Địa chỉ</div>\r\n                        <Input placeholder=\"\" className='Input' id='addressStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Số chứng minh nhân dân</div>\r\n                        <Input placeholder=\"\" className='Input' id='IDCardStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Phân công bộ phận</div>\r\n                        <Input type='select' className='Input' id='department' onChange={(e)=>handleChangeText(e)} >\r\n                           <option value='Bộ phận Vệ sinh nhà' >Chọn bộ phận</option>\r\n                           <option value='Bộ phận Vệ sinh nhà' >Bộ phận Vệ sinh nhà</option>\r\n                           <option value='Bộ phận Nấu ăn'>Bộ phận Nấu ăn</option>\r\n                           <option value='Bộ phận Giặt ủi'>Bộ phận Giặt ủi</option>\r\n                        </Input>\r\n                     </div>\r\n                        {/* <AddBox style={{marginTop: 18, color: 'blue',fontSize: 27 }} onClick={() => setArrayInput((preState) => [...preState, {}])} /> */}\r\n                        {/* <button onClick={() => console.log(text)}>Show</button> */}\r\n                  </div>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={\r\n                     ()=>{ \r\n                     toggle()\r\n                     AddStaff()\r\n                     // console.log(state)\r\n                  }\r\n                  }>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalAddStaff","E:\\Final\\LV\\react-browser\\src\\components\\AdminStatisticalManagement.js",["221","222","223","224","225","226","227","228"],"import React from 'react'\r\nimport '../styles/OrderAdmin.css'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\n\r\n\r\nimport WashingSave from './WashingSaveService'\r\nimport CookingSave from './CookingSaveService'\r\nimport ClearSave from './ClearSaveService'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n      selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n}));\r\n\r\n\r\n\r\n\r\nconst AdminStatistical = () =>{\r\n\r\n   const [state, setState] = React.useState({\r\n      order: '',\r\n      name: 'hai',\r\n    });\r\n   const [type, setType] = React.useState({\r\n      cooking: true,\r\n      housework: null,\r\n      washing: null,\r\n      farm: null\r\n   })\r\n   const classes = useStyles();\r\n   const handleChange = (event) => {\r\n      const name = event.target.name;\r\n      setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n      });\r\n      const option_val = event.target.value\r\n      if (option_val == 1){\r\n         setType({\r\n            cooking:true,\r\n            housework: null,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 2 ){\r\n         setType({\r\n            cooking:null,\r\n            housework: true,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val==3){\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: true,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 4)\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: null,\r\n            farm: true\r\n         })\r\n   }\r\n   \r\n\r\n\r\n   return(\r\n      <div className=\"ContainerAdminOrder\">\r\n         <h2></h2>\r\n         <div className='OptionOrder'>\r\n            \r\n            <FormControl className={classes.formControl}>\r\n               <InputLabel shrink htmlFor=\"age-native-label-placeholder\" >\r\n                 Chọn dịch vụ\r\n               </InputLabel>\r\n               <NativeSelect\r\n                  style={{fontSize: 18}}\r\n                  className='options'\r\n                  value={state.order}\r\n                  onChange={handleChange}\r\n                  inputProps={{\r\n                     name: 'order',\r\n                     id: 'age-native-label-placeholder',\r\n                  }}\r\n               >\r\n                  <option value={1}>Nấu ăn</option>\r\n                  <option value={2}>Dọn dẹp nhà</option>\r\n                  <option value={3}>Giặt ủi</option>                  \r\n               </NativeSelect>\r\n               {/* <FormHelperText>Label + placeholder</FormHelperText> */}\r\n            </FormControl>\r\n         </div>\r\n      \r\n         <div className='ContainerTable'>\r\n            {\r\n               (type.cooking === true)?\r\n                  <CookingSave />\r\n               :           \r\n               (type.housework == true)?\r\n                  // <div>a2</div>\r\n                  <ClearSave />\r\n               :\r\n               (type.washing === true)?\r\n                  <WashingSave/>\r\n               : \r\n               <div></div>\r\n            }\r\n         </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n   )\r\n\r\n\r\n\r\n}\r\n\r\nexport default  AdminStatistical","E:\\Final\\LV\\react-browser\\src\\components\\CookingSaveService.js",["229","230","231","232","233","234"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CookingOrder = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataOrder();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataOrder = () =>{\r\n      Axios.get('http://localhost:216/cookingsave/dataCooking').then(res =>{\r\n         setData(res.data)  \r\n      })  \r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/cooking/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getDataOrder()\r\n      }\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: \"ID công việc\", field: 'idWork'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Số người ăn\", field: 'number'},\r\n      { title: 'Món ăn', field: 'dishList', render: rowData =>\r\n         rowData.dishList.map((dt, index)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Đi chợ', field: 'goMarket'},\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   const [dataStaff, setDataStaff] = useState({\r\n      arrs: []\r\n   })\r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Nấu ăn\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default CookingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\ClearSaveService.js",["235","236","237"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CookingOrder = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataOrder();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataOrder = () =>{\r\n      Axios.get('http://localhost:216/clearsave/dataSaveClear').then(res =>{\r\n         setData(res.data)  \r\n      })  \r\n   }\r\n\r\n   // const handleChangeStatus = async(e) =>{\r\n   //    const status = e.target.value\r\n   //    const id = e.target[e.target.selectedIndex].id\r\n   //    const data = await Axios.post('http://localhost:216/cooking/changeStatus',{\r\n   //       id: id,\r\n   //       status : status \r\n   //    })\r\n   //    // getData()\r\n   //    if (data.data.notifi === \"Oke\"){\r\n   //       getDataOrder()\r\n   //    }\r\n   // }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: 'idWork'},\r\n      { title: 'Tên KH', field: 'username' },\r\n      { title: \"Diện tích\", field: 'area'},\r\n      { title: 'Giờ làm', field: 'timeWork'},\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   \r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Dọn nhà\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default CookingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\WashingSaveService.js",["238","239","240","241"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalWashing from './modals/ModalWashing'\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const WashingOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n\r\n\r\n   const [data, setData] = useState([]);\r\n   \r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/washingsave/dataSaveWashing')\r\n      // console.log(data.data);\r\n      setData(data.data)\r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/washing/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getData()\r\n      }\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Ngày gửi\", field: 'dateSend', type: 'date'},\r\n      { title: 'Giờ gửi', field: 'timeSend'},\r\n      { title: \"Ngày nhận\", field: 'dateTake', type: 'date'},\r\n      { title: 'Giờ nhận', field: 'timeTake'},\r\n      { title: 'Ghi chú', field: 'note'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Giặt ủi\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default WashingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackFromCustomer.js",["242","243","244"],"E:\\Final\\LV\\react-browser\\src\\components\\ReportStaff.js",["245","246","247"],"E:\\Final\\LV\\react-browser\\src\\components\\SalaryStaff.js",["248","249"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { Table , List} from 'reactstrap';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport ModalUpdate from './modals/ModalUpdateSalary'\r\nimport '../styles/SalaryStaff.css'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n\r\n\r\n  const  SalaryStaff = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataSalary()\r\n      getDataSalaryStaff()\r\n      // getDataStaff();\r\n   },[])\r\n\r\n   const getDataSalary = async() =>{\r\n      await Axios.get('http://localhost:216/salary/getDataSalary').then(res =>{\r\n         setDataSalary(res.data)\r\n      })     \r\n   }\r\n\r\n   const getDataSalaryStaff = async() =>{\r\n      await Axios.get('http://localhost:216/salary/getData').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: 'idWork'},\r\n      { title: 'Tên KH', field: 'nameUser' },\r\n      { title: 'Điểm', field: 'rate' },\r\n      { title: 'Nội dung',  field: 'contentfeedback'},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   const [dataSalary, setDataSalary] = useState([]);\r\n   \r\n   \r\n   return (\r\n      <div>\r\n         <div className='dicription'>\r\n            \r\n            <List type=\"unstyled\">\r\n               <li>Qui ước tính lương\r\n                  {\r\n                     dataSalary.map(dt =>(\r\n                     <ul>\r\n                        <li>1 việc bằng: {dt.work}</li>\r\n                        <li>1 việc vượt chỉ tiêu: {dt.bonus}</li>\r\n                        <li>Nghỉ: {dt.absent} </li>\r\n                        <li>Tổng: việc + việc vượt chỉ tiêu - nghỉ - phạt </li>\r\n                     </ul>\r\n                     ))\r\n                  }\r\n                  \r\n               </li>\r\n               {/* <li>Faucibus porta lacus fringilla vel</li> */}\r\n            </List>\r\n            <button >Tính lương</button>\r\n            <ModalUpdate />\r\n\r\n         </div>\r\n         <MaterialTable\r\n         title=\"Lương nhân viên\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default SalaryStaff;","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalUpdateSalary.js",["250","251","252","253","254","255","256","257"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text ,Label} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalChangeService.css'\r\nimport { Checkbox } from '@material-ui/core';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalUpdateSalary = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      // getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataSalary()\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [dataUpdate, setDataUpdate] = React.useState([  ])\r\n   const [dataSalary, setDataSalary] = React.useState([])\r\n   \r\n\r\n   // const getDataServiceById = async() =>{\r\n   //    // console.log('aaa')\r\n   //    const id = props.data.id\r\n   //    console.log(id);\r\n   //    await axios.get('http://localhost:216/service/dataServiceByID/id='+id)\r\n   //    .then(res =>{\r\n   //       setState(res.data)\r\n   //    })\r\n   // }\r\n\r\n   const getDataSalary = async() =>{\r\n      await axios.get('http://localhost:216/salary/getDataSalary').then(res =>{\r\n         setDataSalary(res.data)\r\n         // console.log(res.data);\r\n      })     \r\n   }\r\n\r\n   const handleChange = async( e ) =>{\r\n      console.log(e.target.value)\r\n      setDataUpdate({\r\n         ...dataUpdate,\r\n         [e.target.id] : e.target.value\r\n      })\r\n   }\r\n\r\n   // const sendDataUpdateById = async( ) =>{\r\n   //    const id = props.data.id\r\n   //    const dataSendUpdate = dataUpdate\r\n   //    await axios.post('http://localhost:216/service/updataService',{\r\n   //       id : id,\r\n   //       data :dataSendUpdate\r\n   //    }).then(res =>{\r\n   //       if (res.data.Update === 'Oke'){\r\n   //          Swal.fire({\r\n   //             position: 'top',\r\n   //             icon: 'success',\r\n   //             title: 'Đã Cập nhật!',\r\n   //             showConfirmButton: false,\r\n   //             timer: 1500\r\n   //        }).then(()=>window.location.reload())\r\n          \r\n   //       }\r\n   //    })\r\n      \r\n      \r\n   // }\r\n\r\n   return (\r\n      <div>\r\n         <Button color=\"primary\" \r\n            onClick={()=>{toggle()\r\n            getDataSalary()}\r\n         }>Cập nhật</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader  toggle={toggle}>Cập nhật dịch vụ</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  {\r\n                     dataSalary.map(dataSalary =>(\r\n                     <div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>Chỉ tiêu việc/tháng</Label>\r\n                           <Input placeholder={dataSalary.work} id='nameService' onChange={(val) => handleChange(val)}  className='Input'/> \r\n                        </div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>1 việc nhận</Label>\r\n                           <Input placeholder={dataSalary.target} id='description' onChange={(val) => handleChange(val)}   /> \r\n                        </div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>Việc nhận thêm</Label>\r\n                           <Input placeholder={dataSalary.bonus} id='description' onChange={(val) => handleChange(val)}  /> \r\n                        </div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>Nghỉ</Label>\r\n                           <Input placeholder={dataSalary.absent} id='description' onChange={(val) => handleChange(val)} /> \r\n                        </div>\r\n                        {/* {\r\n                           (state.prince) &&\r\n                           state.prince.map((dt,index) =>\r\n                              <div className='divContainerInput'>\r\n                                 <Label className='TitleName'>Chỉ tiêu : giá</Label>\r\n                                 <Input placeholder={dt} id={index+1} onChange={(val) => handleChange(val)}  className='Input'/> \r\n                              </div>   \r\n                           )\r\n                        } */}\r\n                     </div>\r\n                     ))\r\n                  }\r\n                  \r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={()=>{\r\n                     // toggle()\r\n                     // sendDataUpdateById()\r\n               }}>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n               {/* <Button color=\"primary\" onClick={()=>console.log(dataUpdate)}>Đồng ý</Button> */}\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalUpdateSalary",{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":5,"column":8,"nodeType":"264","messageId":"265","endLine":5,"endColumn":26},{"ruleId":"262","severity":1,"message":"266","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":30},{"ruleId":"262","severity":1,"message":"267","line":13,"column":8,"nodeType":"264","messageId":"265","endLine":13,"endColumn":19},{"ruleId":"262","severity":1,"message":"268","line":3,"column":27,"nodeType":"264","messageId":"265","endLine":3,"endColumn":32},{"ruleId":"262","severity":1,"message":"269","line":3,"column":34,"nodeType":"264","messageId":"265","endLine":3,"endColumn":40},{"ruleId":"262","severity":1,"message":"266","line":4,"column":8,"nodeType":"264","messageId":"265","endLine":4,"endColumn":30},{"ruleId":"262","severity":1,"message":"270","line":15,"column":11,"nodeType":"264","messageId":"265","endLine":15,"endColumn":17},{"ruleId":"262","severity":1,"message":"271","line":15,"column":19,"nodeType":"264","messageId":"265","endLine":15,"endColumn":28},{"ruleId":"262","severity":1,"message":"272","line":17,"column":10,"nodeType":"264","messageId":"265","endLine":17,"endColumn":16},{"ruleId":"262","severity":1,"message":"273","line":60,"column":21,"nodeType":"264","messageId":"265","endLine":60,"endColumn":31},{"ruleId":"262","severity":1,"message":"274","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":25},{"ruleId":"262","severity":1,"message":"275","line":4,"column":10,"nodeType":"264","messageId":"265","endLine":4,"endColumn":20},{"ruleId":"262","severity":1,"message":"276","line":11,"column":10,"nodeType":"264","messageId":"265","endLine":11,"endColumn":17},{"ruleId":"277","severity":1,"message":"278","line":16,"column":6,"nodeType":"279","endLine":16,"endColumn":8,"suggestions":"280"},{"ruleId":"262","severity":1,"message":"281","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"282","line":5,"column":63,"nodeType":"264","messageId":"265","endLine":5,"endColumn":70},{"ruleId":"262","severity":1,"message":"283","line":5,"column":71,"nodeType":"264","messageId":"265","endLine":5,"endColumn":77},{"ruleId":"262","severity":1,"message":"284","line":5,"column":79,"nodeType":"264","messageId":"265","endLine":5,"endColumn":82},{"ruleId":"262","severity":1,"message":"285","line":5,"column":84,"nodeType":"264","messageId":"265","endLine":5,"endColumn":91},{"ruleId":"262","severity":1,"message":"286","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":14},{"ruleId":"262","severity":1,"message":"287","line":12,"column":8,"nodeType":"264","messageId":"265","endLine":12,"endColumn":17},{"ruleId":"262","severity":1,"message":"288","line":13,"column":8,"nodeType":"264","messageId":"265","endLine":13,"endColumn":16},{"ruleId":"262","severity":1,"message":"289","line":17,"column":8,"nodeType":"264","messageId":"265","endLine":17,"endColumn":16},{"ruleId":"262","severity":1,"message":"290","line":34,"column":11,"nodeType":"264","messageId":"265","endLine":34,"endColumn":23},{"ruleId":"262","severity":1,"message":"291","line":35,"column":10,"nodeType":"264","messageId":"265","endLine":35,"endColumn":16},{"ruleId":"262","severity":1,"message":"273","line":56,"column":21,"nodeType":"264","messageId":"265","endLine":56,"endColumn":31},{"ruleId":"262","severity":1,"message":"292","line":72,"column":10,"nodeType":"264","messageId":"265","endLine":72,"endColumn":18},{"ruleId":"262","severity":1,"message":"273","line":56,"column":21,"nodeType":"264","messageId":"265","endLine":56,"endColumn":31},{"ruleId":"262","severity":1,"message":"293","line":5,"column":8,"nodeType":"264","messageId":"265","endLine":5,"endColumn":22},{"ruleId":"262","severity":1,"message":"294","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":47,"column":22,"nodeType":"297","messageId":"298","endLine":47,"endColumn":24},{"ruleId":"295","severity":1,"message":"296","line":54,"column":28,"nodeType":"297","messageId":"298","endLine":54,"endColumn":30},{"ruleId":"295","severity":1,"message":"296","line":61,"column":27,"nodeType":"297","messageId":"298","endLine":61,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":68,"column":28,"nodeType":"297","messageId":"298","endLine":68,"endColumn":30},{"ruleId":"299","severity":1,"message":"300","line":80,"column":10,"nodeType":"301","endLine":80,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":113,"column":32,"nodeType":"297","messageId":"298","endLine":113,"endColumn":34},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"273","line":72,"column":21,"nodeType":"264","messageId":"265","endLine":72,"endColumn":31},{"ruleId":"262","severity":1,"message":"302","line":109,"column":11,"nodeType":"264","messageId":"265","endLine":109,"endColumn":20},{"ruleId":"262","severity":1,"message":"303","line":109,"column":22,"nodeType":"264","messageId":"265","endLine":109,"endColumn":34},{"ruleId":"262","severity":1,"message":"304","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"305","line":9,"column":7,"nodeType":"264","messageId":"265","endLine":9,"endColumn":18},{"ruleId":"262","severity":1,"message":"306","line":25,"column":11,"nodeType":"264","messageId":"265","endLine":25,"endColumn":18},{"ruleId":"262","severity":1,"message":"307","line":25,"column":20,"nodeType":"264","messageId":"265","endLine":25,"endColumn":30},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"273","line":67,"column":21,"nodeType":"264","messageId":"265","endLine":67,"endColumn":31},{"ruleId":"262","severity":1,"message":"304","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"305","line":9,"column":7,"nodeType":"264","messageId":"265","endLine":9,"endColumn":18},{"ruleId":"262","severity":1,"message":"306","line":25,"column":11,"nodeType":"264","messageId":"265","endLine":25,"endColumn":18},{"ruleId":"262","severity":1,"message":"307","line":25,"column":20,"nodeType":"264","messageId":"265","endLine":25,"endColumn":30},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"273","line":70,"column":21,"nodeType":"264","messageId":"265","endLine":70,"endColumn":31},{"ruleId":"262","severity":1,"message":"304","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"305","line":9,"column":7,"nodeType":"264","messageId":"265","endLine":9,"endColumn":18},{"ruleId":"262","severity":1,"message":"306","line":25,"column":11,"nodeType":"264","messageId":"265","endLine":25,"endColumn":18},{"ruleId":"262","severity":1,"message":"307","line":25,"column":20,"nodeType":"264","messageId":"265","endLine":25,"endColumn":30},{"ruleId":"262","severity":1,"message":"308","line":2,"column":70,"nodeType":"264","messageId":"265","endLine":2,"endColumn":74},{"ruleId":"262","severity":1,"message":"304","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"305","line":10,"column":7,"nodeType":"264","messageId":"265","endLine":10,"endColumn":18},{"ruleId":"262","severity":1,"message":"306","line":26,"column":11,"nodeType":"264","messageId":"265","endLine":26,"endColumn":18},{"ruleId":"262","severity":1,"message":"307","line":26,"column":20,"nodeType":"264","messageId":"265","endLine":26,"endColumn":30},{"ruleId":"262","severity":1,"message":"308","line":2,"column":70,"nodeType":"264","messageId":"265","endLine":2,"endColumn":74},{"ruleId":"262","severity":1,"message":"304","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"305","line":12,"column":7,"nodeType":"264","messageId":"265","endLine":12,"endColumn":18},{"ruleId":"262","severity":1,"message":"309","line":17,"column":11,"nodeType":"264","messageId":"265","endLine":17,"endColumn":15},{"ruleId":"262","severity":1,"message":"308","line":2,"column":70,"nodeType":"264","messageId":"265","endLine":2,"endColumn":74},{"ruleId":"262","severity":1,"message":"310","line":2,"column":76,"nodeType":"264","messageId":"265","endLine":2,"endColumn":81},{"ruleId":"262","severity":1,"message":"311","line":2,"column":88,"nodeType":"264","messageId":"265","endLine":2,"endColumn":91},{"ruleId":"262","severity":1,"message":"304","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"312","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":13},{"ruleId":"262","severity":1,"message":"309","line":12,"column":11,"nodeType":"264","messageId":"265","endLine":12,"endColumn":15},{"ruleId":"262","severity":1,"message":"313","line":12,"column":17,"nodeType":"264","messageId":"265","endLine":12,"endColumn":24},{"ruleId":"262","severity":1,"message":"293","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":22},{"ruleId":"262","severity":1,"message":"294","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":49,"column":22,"nodeType":"297","messageId":"298","endLine":49,"endColumn":24},{"ruleId":"295","severity":1,"message":"296","line":56,"column":28,"nodeType":"297","messageId":"298","endLine":56,"endColumn":30},{"ruleId":"295","severity":1,"message":"296","line":63,"column":27,"nodeType":"297","messageId":"298","endLine":63,"endColumn":29},{"ruleId":"295","severity":1,"message":"296","line":70,"column":28,"nodeType":"297","messageId":"298","endLine":70,"endColumn":30},{"ruleId":"299","severity":1,"message":"300","line":83,"column":10,"nodeType":"301","endLine":83,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":113,"column":32,"nodeType":"297","messageId":"298","endLine":113,"endColumn":34},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"314","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":23},{"ruleId":"262","severity":1,"message":"315","line":59,"column":10,"nodeType":"264","messageId":"265","endLine":59,"endColumn":28},{"ruleId":"262","severity":1,"message":"273","line":72,"column":21,"nodeType":"264","messageId":"265","endLine":72,"endColumn":31},{"ruleId":"262","severity":1,"message":"302","line":87,"column":11,"nodeType":"264","messageId":"265","endLine":87,"endColumn":20},{"ruleId":"262","severity":1,"message":"303","line":87,"column":22,"nodeType":"264","messageId":"265","endLine":87,"endColumn":34},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"314","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":23},{"ruleId":"262","severity":1,"message":"273","line":72,"column":21,"nodeType":"264","messageId":"265","endLine":72,"endColumn":31},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"316","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":20},{"ruleId":"262","severity":1,"message":"315","line":58,"column":10,"nodeType":"264","messageId":"265","endLine":58,"endColumn":28},{"ruleId":"262","severity":1,"message":"273","line":70,"column":21,"nodeType":"264","messageId":"265","endLine":70,"endColumn":31},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"314","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":23},{"ruleId":"262","severity":1,"message":"273","line":60,"column":21,"nodeType":"264","messageId":"265","endLine":60,"endColumn":31},{"ruleId":"262","severity":1,"message":"267","line":21,"column":8,"nodeType":"264","messageId":"265","endLine":21,"endColumn":19},{"ruleId":"262","severity":1,"message":"314","line":22,"column":8,"nodeType":"264","messageId":"265","endLine":22,"endColumn":23},{"ruleId":"262","severity":1,"message":"273","line":60,"column":21,"nodeType":"264","messageId":"265","endLine":60,"endColumn":31},{"ruleId":"262","severity":1,"message":"317","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":15},{"ruleId":"262","severity":1,"message":"273","line":67,"column":21,"nodeType":"264","messageId":"265","endLine":67,"endColumn":31},{"ruleId":"262","severity":1,"message":"308","line":2,"column":70,"nodeType":"264","messageId":"265","endLine":2,"endColumn":74},{"ruleId":"262","severity":1,"message":"304","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"318","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":12},{"ruleId":"262","severity":1,"message":"305","line":10,"column":7,"nodeType":"264","messageId":"265","endLine":10,"endColumn":18},{"ruleId":"262","severity":1,"message":"319","line":20,"column":12,"nodeType":"264","messageId":"265","endLine":20,"endColumn":17},{"ruleId":"262","severity":1,"message":"320","line":20,"column":18,"nodeType":"264","messageId":"265","endLine":20,"endColumn":26},{"ruleId":"262","severity":1,"message":"306","line":27,"column":11,"nodeType":"264","messageId":"265","endLine":27,"endColumn":18},{"ruleId":"262","severity":1,"message":"307","line":27,"column":20,"nodeType":"264","messageId":"265","endLine":27,"endColumn":30},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'BrowserHeaderAdmin' is defined but never used.","Identifier","unusedVar","'AdminServiceManagement' is defined but never used.","'MyComponent' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'LogOut' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["323"],"'Dropdown' is defined but never used.","'NavLink' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'Button' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'dropdownOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'addStaff' is assigned a value but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'dataStaff' is assigned a value but never used.","'setDataStaff' is assigned a value but never used.","'Checkbox' is defined but never used.","'buttonLabel' is assigned a value but never used.","'idStaff' is assigned a value but never used.","'setIDStaff' is assigned a value but never used.","'Text' is defined but never used.","'text' is assigned a value but never used.","'Label' is defined but never used.","'Col' is defined but never used.","'Close' is defined but never used.","'setText' is assigned a value but never used.","'ModalAssignment' is defined but never used.","'handleChangeStatus' is assigned a value but never used.","'ModalWashing' is defined but never used.","'Table' is defined but never used.","'Swal' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},"Update the dependencies array to be: [props.history]",{"range":"326","text":"327"},[488,490],"[props.history]"]