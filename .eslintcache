[{"E:\\Final\\LV\\react-browser\\src\\index.js":"1","E:\\Final\\LV\\react-browser\\src\\reportWebVitals.js":"2","E:\\Final\\LV\\react-browser\\src\\App.js":"3","E:\\Final\\LV\\react-browser\\src\\components\\bootstrap.js":"4","E:\\Final\\LV\\react-browser\\src\\pages\\BrowserHeaderAdmin.js":"5","E:\\Final\\LV\\react-browser\\src\\components\\AdminServiceManagement.js":"6","E:\\Final\\LV\\react-browser\\src\\pages\\loginAdmin.Page.js":"7","E:\\Final\\LV\\react-browser\\src\\components\\test.js":"8","E:\\Final\\LV\\react-browser\\src\\components\\CustomerHeader.js":"9","E:\\Final\\LV\\react-browser\\src\\components\\StaffManangent.js":"10","E:\\Final\\LV\\react-browser\\src\\components\\CustomerManagement.js":"11","E:\\Final\\LV\\react-browser\\src\\components\\AdminOrderManagement.js":"12","E:\\Final\\LV\\react-browser\\src\\components\\CookingService.js":"13","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackAdmin.js":"14","E:\\Final\\LV\\react-browser\\src\\components\\getDataStaffFree.js":"15","E:\\Final\\LV\\react-browser\\src\\components\\ModalAssignment.js":"16","E:\\Final\\LV\\react-browser\\src\\components\\ClearService.js":"17","E:\\Final\\LV\\react-browser\\src\\components\\ModalClear.js":"18","E:\\Final\\LV\\react-browser\\src\\components\\WashingService.js":"19","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalWashing.js":"20","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalChangeService.js":"21","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddService.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2316,"mtime":1616900410934,"results":"26","hashOfConfig":"24"},{"size":46,"mtime":1612539728153,"results":"27","hashOfConfig":"24"},{"size":3036,"mtime":1613805894095,"results":"28","hashOfConfig":"24"},{"size":5417,"mtime":1617869418918,"results":"29","hashOfConfig":"24"},{"size":2070,"mtime":1615133772662,"results":"30","hashOfConfig":"24"},{"size":5491,"mtime":1617788615497,"results":"31","hashOfConfig":"24"},{"size":166,"mtime":1613874093864,"results":"32","hashOfConfig":"24"},{"size":4922,"mtime":1616863680435,"results":"33","hashOfConfig":"24"},{"size":4906,"mtime":1616864940105,"results":"34","hashOfConfig":"24"},{"size":3687,"mtime":1617249532098,"results":"35","hashOfConfig":"24"},{"size":6315,"mtime":1616983260263,"results":"36","hashOfConfig":"24"},{"size":1382,"mtime":1616900556634,"results":"37","hashOfConfig":"24"},{"size":1387,"mtime":1616914095844,"results":"38","hashOfConfig":"24"},{"size":3432,"mtime":1617607122771,"results":"39","hashOfConfig":"24"},{"size":5961,"mtime":1617183713728,"results":"40","hashOfConfig":"24"},{"size":3414,"mtime":1617611711036,"results":"41","hashOfConfig":"24"},{"size":6247,"mtime":1617264849969,"results":"42","hashOfConfig":"24"},{"size":3494,"mtime":1617610646259,"results":"43","hashOfConfig":"24"},{"size":4331,"mtime":1617983660613,"results":"44","hashOfConfig":"24"},{"size":5841,"mtime":1617867245197,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ckdpz6",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"48"},"E:\\Final\\LV\\react-browser\\src\\index.js",[],["106","107"],"E:\\Final\\LV\\react-browser\\src\\reportWebVitals.js",[],"E:\\Final\\LV\\react-browser\\src\\App.js",["108","109"],"import React, { useEffect} from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport LoginAdmin from './pages/loginAdmin.Page';\nimport BrowserHeaderAdmin from './pages/BrowserHeaderAdmin.js'\nimport AdminServiceManagement from './components/AdminServiceManagement';\nimport CustomerHeader from './components/CustomerHeader'\nimport StaffManagement from './components/StaffManangent';\nimport CustomerManagement from './components/CustomerManagement';\nimport ServiceManagement from './components/AdminServiceManagement';\nimport OrderManagement from './components/AdminOrderManagement'\nimport MyComponent from './components/FeedbackAdmin'\n\n\nimport Test from './components/test';\nimport Cookies from 'js-cookie';\nimport './App.css'\nconst  App = () => {\n   useEffect(()=>{\n      // TestConnect();\n   },[])\n   return (\n      (Cookies.get('IdAdmin'))?\n      <Router>\n         <div className=\"ContainerApp\">\n            <Route path='/' exact component={CustomerHeader} />\n            <div className='LeftAdmin'>\n               {/* <Route path='/admin' component={BrowserHeaderAdmin}/>   */}\n               <Route  path='/admin' component={Test} />\n               {/* <Route path='/admin/staffs' component={StaffManagement} /> \n               <Route path='/admin/customers' component={CustomerManagement} /> \n               <Route path='/admin/services' component={ServiceManagement} />   */}\n            </div>\n            <div className='RightAdmin'>\n               {/* <Route path='/admin/services' exact  component={AdminServiceManagement} /> */}\n               <Route path='/admin/staffs' component={StaffManagement} /> \n               <Route path='/admin/customers' component={CustomerManagement} /> \n               <Route path='/admin/services' component={ServiceManagement} />  \n               <Route path='/admin/orders' component={OrderManagement} />\n               <Route path='/admin/feedbacks' component={MyComponent} />\n            </div>    \n              \n         </div>\n      </Router>\n      :\n      <Router>\n         <div className=\"ContainerApp\">   \n            <Route path='/' exact component={CustomerHeader} />        \n            <Route path='/admin' exact component={LoginAdmin} />\n         </div>            \n      </Router>                  \n  );\n\n}\n\nexport default App;\n","E:\\Final\\LV\\react-browser\\src\\components\\bootstrap.js",[],"E:\\Final\\LV\\react-browser\\src\\pages\\BrowserHeaderAdmin.js",["110","111","112","113","114"],"import '../styles/BrowserHeaderAdmin.css';\r\nimport React, {useState } from \"react\";\r\nimport { BrowserRouter as Route, Router , Link } from \"react-router-dom\";\r\nimport AdminServiceManagement from '../components/AdminServiceManagement.js'\r\nimport '../components/bootstrap';\r\nimport Cookies from 'js-cookie'\r\nimport {\r\n   NavLink\r\n } from 'reactstrap';\r\n \r\n\r\n\r\nconst BrowserHeaderAdmin = (props) => {\r\n\r\n   const [isOpen, setIsOpen] = useState(false);\r\n  \r\n   const LogOut = () =>{\r\n      Cookies.remove('IdAdmin');\r\n      window.location.reload(1)\r\n   }\r\n   return (\r\n      <div className='ContainerBrowserHeader'> \r\n         <div className='ContainerMenuAdmin'>  \r\n            <div className='parentMenuAdmin'>\r\n               <div className='MenuAdmin'>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/services\" className=\"LinkMenu\">Quản lý dịch vụ</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/staffs\" className=\"LinkMenu\">Quản lý Nhân viên</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/customers\" className=\"LinkMenu\">Quản lý Khách hàng</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/orders\" className=\"LinkMenu\">Quản lý Công việc</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/feedbacks\" className=\"LinkMenu\">Quản lý Phản hồi</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/chat\" className=\"LinkMenu\">Trò chuyện trực tiếp</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/statistic\" className=\"LinkMenu\">Thống kê</Link>\r\n                  </NavLink>\r\n                  <div className='ContainerInfor' >\r\n                     <div>\r\n                        <NavLink className='inforAd'>\r\n                           Tên: {Cookies.get('NameAdmin')} <br/>\r\n                        </NavLink>\r\n                        <NavLink className='inforAd'>\r\n                           Chức vụ: {Cookies.get('Position')}\r\n                        </NavLink>\r\n                     </div>\r\n                     <div onClick={()=>LogOut()}>  \r\n                        <NavLink className='inforAd'>\r\n                           <Link className='logout-link'>Đăng xuất</Link>\r\n                        </NavLink> \r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>                   \r\n            <div className='TableMaterial'>\r\n               \r\n            </div>      \r\n\r\n         </div>\r\n         \r\n              \r\n         \r\n      </div>\r\n\r\n   )\r\n\r\n}\r\nexport default BrowserHeaderAdmin;","E:\\Final\\LV\\react-browser\\src\\components\\AdminServiceManagement.js",["115"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport ModalChangeService from './modals/ModalChangeService'\r\nimport ModalAddService from './modals/ModalAddService'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  ServiceManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = async() =>{\r\n      console.log('GetDataService');\r\n      Axios.get('http://localhost:216/service/dataService').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   \r\n   const  [columns, setColumns] = useState([\r\n      // { title: 'Action', render: rowData =>(\r\n      //    <>   \r\n      //       <ModalAddService/>\r\n      //    </>\r\n      //    )\r\n      // },\r\n      { title: 'Id dịch vụ', field: '_id' },\r\n      { title: 'Tên dịch vụ', field: 'nameService' },\r\n      { title: 'Mô tả dịch vụ', field: 'descriptionService'},\r\n      { title: 'Giá dịch vụ', field: 'prince', render: rowData=>(\r\n         rowData.prince.map(dt => <p>{dt}</p> )\r\n      )},\r\n      { title: '', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalChangeService data={{id: rowData._id}} />\r\n         </>\r\n      )},\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n \r\n   return (\r\n   <div>\r\n      {/* <button onClick={()=>console.log(data)}>aaaaaaaaaaaaaaaa</button> */}\r\n      <ModalAddService />\r\n      <MaterialTable\r\n      title=\"Quản lý Dịch vụ\"\r\n      icons={tableIcons}\r\n      columns={columns}\r\n      data={data}\r\n      editable={{\r\n      // onRowAdd: newData =>\r\n      //      new Promise((resolve, reject) => {\r\n      //        setTimeout(() => {\r\n      //          setData([...data, newData]);\r\n      //          Axios.post('http://localhost:216/service/addService', \r\n      //             newData\r\n      //          )\r\n      //          resolve();\r\n      //        }, 1000)\r\n            \r\n      //      }),\r\n         // onRowUpdate: (newData, oldData) =>\r\n         //   new Promise((resolve, reject) => {\r\n         //     setTimeout(() => {\r\n         //       const dataUpdate = [...data];\r\n         //       const index = oldData.tableData.id;\r\n         //       dataUpdate[index] = newData;\r\n         //       setData([...dataUpdate]);\r\n         //          Axios.post('http://localhost:216/service/updatedataService',\r\n         //             newData\r\n         //          )\r\n         //       resolve();\r\n         //     }, 1000)\r\n         //   }),\r\n         //   onRowDelete: oldData =>\r\n         //   new Promise((resolve, reject) => {\r\n         //       setTimeout(() => {\r\n         //           const dataDelete = [...data];\r\n         //           const index = oldData.tableData.id;\r\n         //           dataDelete.splice(index, 1);\r\n         //           setData([...dataDelete]);\r\n         //             const idService = oldData._id;\r\n         //             Axios.get('http://localhost:216/service/delService/id='+idService).then(res =>{\r\n         //                // getDataStaff()\r\n         //             })\r\n         //           resolve();\r\n         //       }, 1000);\r\n         //   })\r\n         }}\r\n     />\r\n   </div>\r\n   )\r\n }\r\n\r\n\r\n export default ServiceManagement;","E:\\Final\\LV\\react-browser\\src\\pages\\loginAdmin.Page.js",["116","117","118","119"],"import React, { useState, useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Button , TextField} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport  '../styles/LoginAdmin.css';\r\n\r\n\r\nconst LoginAdmin = (props) =>{\r\n   const history = useHistory()\r\n   useEffect(()=>{\r\n      if (Cookies.get('IdAdmin')){\r\n         props.history.push('/admin')\r\n      }\r\n   },[])\r\n   const LoginAdmin = (e) =>{\r\n      e.preventDefault();\r\n      const {usernameEntered, passwordEntered } = e.target;\r\n      Axios.post('http://localhost:216/admin', {\r\n         username: usernameEntered.value,\r\n         password: passwordEntered.value\r\n      }).then(res =>{\r\n         if (res.data.id){\r\n            Cookies.set('IdAdmin',res.data.id,{expires: 7})\r\n            Cookies.set('Position',res.data.position,{expires: 7})\r\n            Cookies.set('NameAdmin',res.data.name, {expires: 7})\r\n            window.location.reload(1)\r\n         }else{\r\n            window.location.reload(1) \r\n         }\r\n      })\r\n   }\r\n\r\n   return(\r\n\r\n      <div className='ContainerLoginAdmin'>\r\n         <div className='LoginAdmin'>\r\n            <div className='TitleLoginAdmin'>\r\n               LOGIN\r\n            </div>\r\n               <form onSubmit={(e)=>LoginAdmin(e)} noValidate  autoComplete=\"off\" >\r\n                  <div className='TextfieldUsername'>\r\n                     <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name='usernameEntered' />\r\n                  </div>\r\n                  <div className='TextfieldPassword'>\r\n                     <TextField id=\"outlined-basic\" type='password' label=\"Password\" variant=\"outlined\" name='passwordEntered'/>\r\n                  </div>\r\n                  {/* <div className='ButtonLogIn'> */}\r\n                     <Button className='btnlogin' type='sunmit'>LOGIN</Button>\r\n                  {/* </div> */}\r\n               </form>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n   \r\n\r\n}\r\n\r\nexport default LoginAdmin;","E:\\Final\\LV\\react-browser\\src\\components\\test.js",["120","121","122","123","124"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../styles/test.css';\r\nimport MenuIcon from '@material-ui/icons/Apps';\r\nimport {Link} from 'react-router-dom'\r\nimport {HomeWorkSharp, PersonPinSharp, AccessibilitySharp, WorkSharp, FeedbackSharp, ChatSharp,EqualizerSharp, Info } from '@material-ui/icons'\r\nimport Cookies from 'js-cookie';\r\n\r\nconst useStyles = makeStyles({\r\n   list: {\r\n      width: 250,\r\n   },\r\n   fullList: {\r\n      width: 'auto',\r\n   },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer(props) {\r\n   const classes = useStyles();\r\n   const history = useHistory()\r\n   const [state, setState] = React.useState({\r\n      top: false,\r\n      left: false,\r\n      bottom: false,\r\n      right: false,\r\n   });\r\n   const toggleDrawer = (anchor, open) => (event) => {\r\n      if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n         return;\r\n      }\r\n\r\n      setState({ ...state, [anchor]: open });\r\n   };\r\n   const LogOut = () =>{\r\n      Cookies.remove('IdAdmin');\r\n      history.push(\"/admin\"); \r\n      window.location.reload(1);\r\n     \r\n      \r\n   }\r\n\r\n   const list = (anchor) => (\r\n      <div\r\n         className={clsx(classes.list, {\r\n         [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n         })}\r\n         role=\"presentation\"\r\n         onClick={toggleDrawer(anchor, false)}\r\n         onKeyDown={toggleDrawer(anchor, false)}\r\n      >\r\n     \r\n\r\n      <List>    \r\n               {  [['Quản lý dịch vụ',\"/admin/services\",<HomeWorkSharp style={{ color: '#043927' }}/>], \r\n                  ['Quản lý Nhân viên',\"/admin/staffs\", <PersonPinSharp style={{ color: '#043927' }}/>], \r\n                  ['Quản lý Khách hàng',\"/admin/customers\",<AccessibilitySharp style={{ color: '#043927' }}/>], \r\n                  ['Quản lý Công việc',\"/admin/orders\", <WorkSharp style={{ color: '#043927' }}/>],\r\n                  ['Quản lý Phản hồi',\"/admin/feedbacks\", <FeedbackSharp style={{ color: '#043927' }}/>],\r\n                  ['Trò chuyện trực tiếp',\"/admin/chat\",<ChatSharp style={{ color: '#043927' }}/>],\r\n                  ['Thống kê',\"/admin/statistic\", <EqualizerSharp style={{ color: '#043927' }}/>]].map(([text,link,icon], index) => (\r\n                   <Link className='Link' to={link}>\r\n                     <ListItem button key={text}>\r\n                        {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                        <ListItemIcon >{icon}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                     </ListItem>\r\n                  </Link>\r\n               ))}   \r\n      </List>\r\n      <Divider />\r\n      <List>\r\n         {/* <ListItemText style={{textAlign: \"center\"}}><b>Thông tin</b></ListItemText>\r\n         {[['Tên',Cookies.get('NameAdmin')], ['Chức vụ: ',Cookies.get('Position')]].map(([title,text], index) => (\r\n            <ListItem button key={text}>\r\n               <ListItemIcon>{icon}</ListItemIcon>\r\n               <ListItemText primary={title}/>\r\n               <ListItemText primary={text} />\r\n            </ListItem>\r\n         ))} */}\r\n         <div style={{ paddingLeft: 20}}>\r\n            <ListItemText style={{paddingBottom: 20}}><b>Thông tin</b></ListItemText>\r\n            <ListItemText style={{paddingBottom: 5, borderBottom: \"1px solid black\"}}>Tên: {Cookies.get('NameAdmin')}</ListItemText>\r\n            <ListItemText style={{paddingBottom: 5, borderBottom: \"1px solid black\"}}>Chức vụ: {Cookies.get('Position')}</ListItemText>\r\n            <ListItemText onClick={()=>LogOut()} style={{paddingBottom: 5, borderBottom: \"1px solid black\"}}><Link className='logout-link'>Đăng xuất</Link></ListItemText>\r\n         </div>\r\n         \r\n\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n       <div className='header'>\r\n         {['Menu'].map((anchor) => (\r\n         <React.Fragment key={anchor}>\r\n               {\r\n               /* < button\r\n               \r\n                  className='btnMenu'\r\n                  onClick={toggleDrawer(anchor, true)}\r\n                  // startIcon={<MenuIcon className='icon' />}\r\n               > \r\n                     {anchor}\r\n               </button> */}\r\n               <div className='divMenu'>\r\n                     <Menu style={{ fontSize: 45}} onClick={toggleDrawer(anchor, true)}/> \r\n                     \r\n               </div>\r\n               \r\n\r\n\r\n            <SwipeableDrawer\r\n                  anchor={anchor}\r\n                  open={state[anchor]}\r\n                  onClose={toggleDrawer(anchor, false)}\r\n                  onOpen={toggleDrawer(anchor, true)}\r\n               >\r\n                  {list(anchor)}\r\n               </SwipeableDrawer>\r\n         </React.Fragment>\r\n         ))}\r\n       </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","E:\\Final\\LV\\react-browser\\src\\components\\CustomerHeader.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\StaffManangent.js",["125"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  StaffManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('GetDataStaff');\r\n      Axios.get('http://localhost:216/staff/dataStaff').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n     { title: 'Họ và Tên', field: 'fullnameStaff' },\r\n     { title: 'Tên đăng nhập', field: 'usernameStaff'},\r\n     { title: 'Mật khẩu', field: 'passwordStaff' },\r\n     { title: 'Ngày sinh', field: 'birthdayStaff', type: 'date'},\r\n     { title: 'Địa chỉ', field: 'addressStaff'},\r\n     { title: 'Số CMND', field: 'IDCardStaff'},\r\n     { title: 'Giới tính', field: 'sex'},\r\n     { title: \"Nơi sinh\", field: 'birthPlace'},\r\n     { title: 'Ngày tham gia',  field: 'joinDay', type: 'date'}\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n \r\n   return (\r\n      \r\n     <MaterialTable\r\n       title=\"Quản lý Nhân sự\"\r\n       icons={tableIcons}\r\n       columns={columns}\r\n       data={data}\r\n       editable={{\r\n         onRowAdd: newData =>\r\n           new Promise((resolve, reject) => {\r\n             setTimeout(() => {\r\n               setData([...data, newData]);\r\n               Axios.post('http://localhost:216/staff/addStaff', \r\n                  newData\r\n               )\r\n               resolve();\r\n             }, 1000)\r\n            \r\n           }),\r\n         onRowUpdate: (newData, oldData) =>\r\n           new Promise((resolve, reject) => {\r\n             setTimeout(() => {\r\n               const dataUpdate = [...data];\r\n               const index = oldData.tableData.id;\r\n               dataUpdate[index] = newData;\r\n               setData([...dataUpdate]);\r\n                  Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                     newData\r\n                  )\r\n               resolve();\r\n             }, 1000)\r\n           }),\r\n           onRowDelete: oldData =>\r\n           new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                   const dataDelete = [...data];\r\n                   const index = oldData.tableData.id;\r\n                   dataDelete.splice(index, 1);\r\n                   setData([...dataDelete]);\r\n                     const idStaff = oldData._id;\r\n                     Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n                        // getDataStaff()\r\n                     })\r\n                   resolve();\r\n               }, 1000);\r\n           })\r\n         }}\r\n     />\r\n   )\r\n }\r\n\r\n\r\n export default StaffManagement;","E:\\Final\\LV\\react-browser\\src\\components\\CustomerManagement.js",["126"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CustomerManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('GetDataStaff');\r\n      Axios.get('http://localhost:216/user/dataUser').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n     { title: 'Họ và Tên', field: 'fullname' },\r\n     { title: 'Tên đăng nhập', field: 'username'},\r\n     { title: 'Mật khẩu', field: 'password' },\r\n     { title: 'Ngày sinh', field: 'birthday', type: 'date'},\r\n     { title: 'Địa chỉ', field: 'address'},\r\n     { title: 'Số CMND', field: 'IDCard'},\r\n     { title: 'Giới tính', field: 'sex'},\r\n     { title: \"Email\", field: 'email'},\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n \r\n   return (\r\n      \r\n     <MaterialTable\r\n       title=\"Quản lý Khách Hàng\"\r\n       icons={tableIcons}\r\n       columns={columns}\r\n       data={data}\r\n       editable={{\r\n         // onRowAdd: newData =>\r\n         //   new Promise((resolve, reject) => {\r\n         //     setTimeout(() => {\r\n         //       setData([...data, newData]);\r\n         //       // Axios.post('http://localhost:216/staff/addStaff', \r\n         //       //    newData\r\n         //       // )\r\n         //       resolve();\r\n         //     }, 1000)\r\n            \r\n         //   }),\r\n         // onRowUpdate: (newData, oldData) =>\r\n         //   new Promise((resolve, reject) => {\r\n         //     setTimeout(() => {\r\n         //       const dataUpdate = [...data];\r\n         //       const index = oldData.tableData.id;\r\n         //       dataUpdate[index] = newData;\r\n         //       setData([...dataUpdate]);\r\n         //          // Axios.post('http://localhost:216/staff/updatedataStaff',\r\n         //          //    newData\r\n         //          // )\r\n         //       resolve();\r\n         //     }, 1000)\r\n         //   }),\r\n           onRowDelete: oldData =>\r\n           new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                   const dataDelete = [...data];\r\n                   const index = oldData.tableData.id;\r\n                   dataDelete.splice(index, 1);\r\n                   setData([...dataDelete]);\r\n                     const idUSer = oldData._id;\r\n                     Axios.get('http://localhost:216/user/delUser/id='+idUSer).then(res =>{\r\n                        // getDataStaff()\r\n                     })\r\n                   resolve();\r\n               }, 1000);\r\n           })\r\n         }}\r\n     />\r\n   )\r\n }\r\n\r\n\r\n export default CustomerManagement;","E:\\Final\\LV\\react-browser\\src\\components\\AdminOrderManagement.js",["127","128","129","130","131","132","133","134"],"import React from 'react'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nimport OrderScreen from './CookingService'\r\nimport ClearScreen from './ClearService'\r\nimport WashingComponent from './WashingService'\r\n\r\nimport '../styles/OrderAdmin.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n      selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n}));\r\n\r\nconst AdminOrder = () =>{\r\n\r\n   \r\n   const [state, setState] = React.useState({\r\n      order: '',\r\n      name: 'hai',\r\n    });\r\n   const [type, setType] = React.useState({\r\n      cooking: true,\r\n      housework: null,\r\n      washing: null,\r\n      farm: null\r\n   })\r\n   const classes = useStyles();\r\n   const handleChange = (event) => {\r\n      const name = event.target.name;\r\n      setState({\r\n        ...state,\r\n        [name]: event.target.value,\r\n      });\r\n      const option_val = event.target.value\r\n      if (option_val == 1){\r\n         setType({\r\n            cooking:true,\r\n            housework: null,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 2 ){\r\n         setType({\r\n            cooking:null,\r\n            housework: true,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val==3){\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: true,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 4)\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: null,\r\n            farm: true\r\n         })\r\n   }\r\n\r\n\r\n   return(\r\n      <div className=\"ContainerAdminOrder\">\r\n         <h2></h2>\r\n         <div className='OptionOrder'>\r\n            \r\n            <FormControl className={classes.formControl}>\r\n               <InputLabel shrink htmlFor=\"age-native-label-placeholder\" >\r\n                 Chọn dịch vụ\r\n               </InputLabel>\r\n               <NativeSelect\r\n                  style={{fontSize: 18}}\r\n                  className='options'\r\n                  value={state.order}\r\n                  onChange={handleChange}\r\n                  inputProps={{\r\n                     name: 'order',\r\n                     id: 'age-native-label-placeholder',\r\n                  }}\r\n               >\r\n                  <option value={1}>Nấu ăn</option>\r\n                  <option value={2}>Dọn dẹp nhà</option>\r\n                  <option value={3}>Giặt ủi</option>\r\n                  <option value={4}>--------</option>\r\n                  \r\n               </NativeSelect>\r\n               {/* <FormHelperText>Label + placeholder</FormHelperText> */}\r\n            </FormControl>\r\n         </div>\r\n      \r\n         <div className='ContainerTable'>\r\n            {\r\n               \r\n               (type.cooking === true)?\r\n                  <OrderScreen /> \r\n               :           \r\n               (type.housework == true)?\r\n                  // <div>a2</div>\r\n                  <ClearScreen />\r\n               :\r\n               (type.washing === true)?\r\n                  <WashingComponent/>\r\n               :\r\n               (type.farm === true)?\r\n               <div>a4</div>\r\n               : \r\n               <div>kcj</div>\r\n            }\r\n         </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AdminOrder","E:\\Final\\LV\\react-browser\\src\\components\\CookingService.js",["135","136","137","138"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CookingOrder = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataOrder();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataOrder = () =>{\r\n      Axios.get('http://localhost:216/cooking/dataCooking').then(res =>{\r\n         setData(res.data)  \r\n      })  \r\n   }\r\n\r\n   // const getDataStaff = () =>{\r\n   //    console.log('aa');\r\n   //    Axios.get('http://localhost:216/staff/statusStaff').then(res =>{\r\n   //       setDataStaff({arrs: res.data})\r\n   //    })\r\n   // }\r\n   \r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Số người ăn\", field: 'number'},\r\n      { title: 'Món ăn', field: 'dishList', render: rowData =>\r\n         rowData.dishList.map((dt, index)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Nhân viên' , field: 'staff', render: rowData=>\r\n         rowData.staff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Đi chợ', field: 'goMarket'},\r\n      { title: 'Thời gian', field: 'time'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      { title: 'Trạng thái', field: 'status', render: rowData => (\r\n         <>\r\n             <select style={{ borderWidth:  0, fontSize: 14}}>\r\n               <option>Đang chờ</option>\r\n               <option>Xác nhận</option>\r\n             </select>\r\n             {/* <input type=\"checkbox\"/> */}\r\n         </>\r\n       )},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalAssignment data={[{time:rowData.time}, {date:rowData.date}, {id: rowData._id}]} />\r\n         </>\r\n       )},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   const [dataStaff, setDataStaff] = useState({\r\n      arrs: []\r\n   })\r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Quản lý Dịch vụ Nấu ăn\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default CookingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackAdmin.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\getDataStaffFree.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\ModalAssignment.js",["139","140","141","142"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalAssignment = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    Axios.post('http://localhost:216/cooking/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('aaa')\r\n      const data = props.data\r\n      Axios.post('http://localhost:216/staff/statusStaff', {\r\n         dttime: data\r\n      }).then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/cooking/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n \r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e)=>Send(e)}>Chọn</Button>{' '}\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalAssignment","E:\\Final\\LV\\react-browser\\src\\components\\ClearService.js",["143","144"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalClear from './ModalClear'\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const ClearOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n\r\n\r\n   const [data, setData] = useState([]);\r\n   \r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/clear/getData')\r\n      console.log(data.data);\r\n      setData(data.data)\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'username' },\r\n      { title: \"Diện tích\", field: 'area'},\r\n      { title: 'Giờ làm', field: 'timeWork'},\r\n      { title: 'Nhân viên' , field: 'nameStaff', \r\n         render: rowData=>\r\n            rowData.nameStaff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      // { title: 'Trạng thái', field: 'status', render: rowData => (\r\n      //    <>\r\n      //        <select style={{ borderWidth:  0, fontSize: 14}}>\r\n      //          <option>Đang chờ</option>\r\n      //          <option>Xác nhận</option>\r\n      //        </select>\r\n      //        {/* <input type=\"checkbox\"/> */}\r\n      //    </>\r\n      //  )},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalClear data={[{time:rowData.timeStart}, {date:rowData.date}, {id: rowData._id}]} />\r\n         </>\r\n       )},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Quản lý Dịch vụ Dọn dẹp nhà\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default ClearOrder;","E:\\Final\\LV\\react-browser\\src\\components\\ModalClear.js",["145","146","147","148"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalClear = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    Axios.post('http://localhost:216/clear/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('aaa')\r\n      const data = props.data\r\n      Axios.post('http://localhost:216/staff/statusStaff', {\r\n         dttime: data\r\n      }).then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/clear/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e) => Send(e)}>Chọn</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalClear","E:\\Final\\LV\\react-browser\\src\\components\\WashingService.js",["149","150"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalWashing from './modals/ModalWashing'\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const WashingOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n\r\n\r\n   const [data, setData] = useState([]);\r\n   \r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/washing/getData')\r\n      // console.log(data.data);\r\n      setData(data.data)\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Ngày gửi\", field: 'dateSend', type: 'date'},\r\n      { title: 'Giờ gửi', field: 'timeSend'},\r\n      { title: \"Ngày nhận\", field: 'dateTake', type: 'date'},\r\n      { title: 'Giờ nhận', field: 'timeTake'},\r\n      { title: 'Nhân viên', field: 'staff' ,\r\n         render: rowData=>\r\n            rowData.staff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Ghi chú', field: 'note'},\r\n      // { title: 'Trạng thái', field: 'status', render: rowData => (\r\n      //    <>\r\n      //        <select style={{ borderWidth:  0, fontSize: 14}}>\r\n      //          <option>Đang chờ</option>\r\n      //          <option>Xác nhận</option>\r\n      //        </select>\r\n      //        {/* <input type=\"checkbox\"/> */}\r\n      //    </>\r\n      //  )},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalWashing \r\n               data={[\r\n                  { timeSend: rowData.timeSend },\r\n                  { timeTake: rowData.timeTake }, \r\n                  { dateSend: rowData.dateSend }, \r\n                  { dateTake: rowData.dateTake },\r\n                  { id: rowData._id}\r\n               ]} \r\n            />\r\n         </>\r\n       )},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Giặt ủi\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default WashingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalWashing.js",["151","152","153","154"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalWashing = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    console.log(datatime);\r\n   //    Axios.post('http://localhost:216/washing/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('aaa')\r\n      const data = props.data\r\n      console.log(data);\r\n      Axios.post('http://localhost:216/staff/statusStaffWash', {\r\n         dttime: data\r\n      })\r\n      .then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/washing/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n\r\n\r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e)=>Send(e)}>Chọn</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalWashing","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalChangeService.js",["155","156","157","158","159"],"E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddService.js",["160","161","162","163"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text, Label, Row, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalAddService.css';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Close from '@material-ui/icons/Close'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalChangeService = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   \r\n   const [arrayInput, setArrayInput] = React.useState([]);\r\n   const [text, setText] = React.useState(\"\");\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      setModal(!modal)\r\n      // AddService()\r\n   } \r\n\r\n   const [ state, setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n  \r\n   const handleChange = (value, index) => {\r\n      var a = [...arrayInput];\r\n      a[Number(index)].value = value.target.value;\r\n      setArrayInput(a);\r\n      console.log(arrayInput);\r\n      setText(index + \" with value: \" + value.target.value);\r\n   }\r\n\r\n   const handleChangeDel = (index) => {\r\n      var a = [...arrayInput];\r\n      a.splice(index, 1);\r\n      setArrayInput(a);\r\n      // console.log(arrayInput);\r\n   }\r\n\r\n   const handleChangeText = async(e)  =>{\r\n      // console.log(e.target.value);\r\n      setState({\r\n         ...state,\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n\r\n   const AddService = async() =>{\r\n      await axios.post('http://localhost:216/service/addService',{\r\n         dataSend: state,\r\n         price: arrayInput\r\n      }).then(res =>{\r\n         if (res.data.st === 'Oke'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Thêm!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n          \r\n         }\r\n      })\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         <Row style={{marginBottom: 25}}>\r\n            <AddBox style={{marginLeft: 18, color: 'blue',fontSize: 28 }} onClick={()=>toggle()} /><span > Thêm dịch vụ</span>\r\n         </Row>\r\n         {/* <Button color=\"primary\" >Cập nhật</Button> */}\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Thêm dịch vụ</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  <div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Tên dịch vụ</div>\r\n                        <Input placeholder=\"\" className='Input' id='nameService' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Mô tả</Label>\r\n                        <Input type=\"textarea\" placeholder=\"\" style={{ height: 100 }} id='discription' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='divInputPrice' >\r\n                           <Row>\r\n                              <Col md={11}>\r\n                                 <div>\r\n                                    <Label className='TitleName'>Giá (Chỉ tiêu : Giá)</Label>\r\n                                    <Input onChange={(e)=>handleChangeText(e)} id='value'  />\r\n                                 </div>\r\n                                 \r\n                              </Col>\r\n                           </Row>\r\n                        </div>\r\n                     </div>\r\n                  \r\n                     {arrayInput?.map((value, index) => (\r\n                        <div key={index} className='divInputPrice'>\r\n                           <Row>\r\n                              <Col md={11}>\r\n                                 <div>\r\n                                    <Label className='TitleName'>Giá (Chỉ tiêu : Giá)</Label>\r\n                                    <Input \r\n                                       // onChange={(e)=>handleChangeText(e)} \r\n                                       id={index}\r\n                                       value={arrayInput[index]?.value}\r\n                                       onChange={(value) => handleChange(value, index)}\r\n                                    />\r\n                                 </div>                                 \r\n                              </Col>\r\n                              <Col md={0.5} >\r\n                                 <div style={{ marginTop: 35}}>\r\n                                    <Close style={{ color: 'red',fontSize: 27 }} onClick={()=> handleChangeDel(index)} />\r\n                                 </div>\r\n                              </Col>\r\n                           </Row>\r\n                           <br></br>\r\n                        </div>\r\n                        ))}\r\n                        <AddBox style={{marginTop: 18, color: 'blue',fontSize: 27 }} onClick={() => setArrayInput((preState) => [...preState, {}])} />\r\n                        {/* <button onClick={() => console.log(text)}>Show</button> */}\r\n                  </div>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={\r\n                     ()=>{ toggle()\r\n                     AddService()}\r\n                  }>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalChangeService",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":26},{"ruleId":"168","severity":1,"message":"172","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":30},{"ruleId":"168","severity":1,"message":"173","line":3,"column":27,"nodeType":"170","messageId":"171","endLine":3,"endColumn":32},{"ruleId":"168","severity":1,"message":"174","line":3,"column":34,"nodeType":"170","messageId":"171","endLine":3,"endColumn":40},{"ruleId":"168","severity":1,"message":"172","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":30},{"ruleId":"168","severity":1,"message":"175","line":15,"column":11,"nodeType":"170","messageId":"171","endLine":15,"endColumn":17},{"ruleId":"168","severity":1,"message":"176","line":15,"column":19,"nodeType":"170","messageId":"171","endLine":15,"endColumn":28},{"ruleId":"168","severity":1,"message":"177","line":60,"column":21,"nodeType":"170","messageId":"171","endLine":60,"endColumn":31},{"ruleId":"168","severity":1,"message":"178","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"179","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},{"ruleId":"168","severity":1,"message":"180","line":11,"column":10,"nodeType":"170","messageId":"171","endLine":11,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":16,"column":6,"nodeType":"183","endLine":16,"endColumn":8,"suggestions":"184"},{"ruleId":"168","severity":1,"message":"185","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":14},{"ruleId":"168","severity":1,"message":"186","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":17},{"ruleId":"168","severity":1,"message":"187","line":12,"column":8,"nodeType":"170","messageId":"171","endLine":12,"endColumn":16},{"ruleId":"168","severity":1,"message":"188","line":16,"column":8,"nodeType":"170","messageId":"171","endLine":16,"endColumn":16},{"ruleId":"168","severity":1,"message":"189","line":18,"column":112,"nodeType":"170","messageId":"171","endLine":18,"endColumn":116},{"ruleId":"168","severity":1,"message":"177","line":55,"column":21,"nodeType":"170","messageId":"171","endLine":55,"endColumn":31},{"ruleId":"168","severity":1,"message":"177","line":55,"column":21,"nodeType":"170","messageId":"171","endLine":55,"endColumn":31},{"ruleId":"168","severity":1,"message":"190","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":22},{"ruleId":"168","severity":1,"message":"191","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":47,"column":22,"nodeType":"194","messageId":"195","endLine":47,"endColumn":24},{"ruleId":"192","severity":1,"message":"193","line":54,"column":28,"nodeType":"194","messageId":"195","endLine":54,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":61,"column":27,"nodeType":"194","messageId":"195","endLine":61,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":68,"column":28,"nodeType":"194","messageId":"195","endLine":68,"endColumn":30},{"ruleId":"196","severity":1,"message":"197","line":80,"column":10,"nodeType":"198","endLine":80,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":113,"column":32,"nodeType":"194","messageId":"195","endLine":113,"endColumn":34},{"ruleId":"168","severity":1,"message":"199","line":21,"column":8,"nodeType":"170","messageId":"171","endLine":21,"endColumn":19},{"ruleId":"168","severity":1,"message":"177","line":67,"column":21,"nodeType":"170","messageId":"171","endLine":67,"endColumn":31},{"ruleId":"168","severity":1,"message":"200","line":98,"column":11,"nodeType":"170","messageId":"171","endLine":98,"endColumn":20},{"ruleId":"168","severity":1,"message":"201","line":98,"column":22,"nodeType":"170","messageId":"171","endLine":98,"endColumn":34},{"ruleId":"168","severity":1,"message":"202","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":9,"column":7,"nodeType":"170","messageId":"171","endLine":9,"endColumn":18},{"ruleId":"168","severity":1,"message":"204","line":25,"column":11,"nodeType":"170","messageId":"171","endLine":25,"endColumn":18},{"ruleId":"168","severity":1,"message":"205","line":25,"column":20,"nodeType":"170","messageId":"171","endLine":25,"endColumn":30},{"ruleId":"168","severity":1,"message":"199","line":21,"column":8,"nodeType":"170","messageId":"171","endLine":21,"endColumn":19},{"ruleId":"168","severity":1,"message":"177","line":58,"column":21,"nodeType":"170","messageId":"171","endLine":58,"endColumn":31},{"ruleId":"168","severity":1,"message":"202","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":9,"column":7,"nodeType":"170","messageId":"171","endLine":9,"endColumn":18},{"ruleId":"168","severity":1,"message":"204","line":25,"column":11,"nodeType":"170","messageId":"171","endLine":25,"endColumn":18},{"ruleId":"168","severity":1,"message":"205","line":25,"column":20,"nodeType":"170","messageId":"171","endLine":25,"endColumn":30},{"ruleId":"168","severity":1,"message":"199","line":21,"column":8,"nodeType":"170","messageId":"171","endLine":21,"endColumn":19},{"ruleId":"168","severity":1,"message":"177","line":58,"column":21,"nodeType":"170","messageId":"171","endLine":58,"endColumn":31},{"ruleId":"168","severity":1,"message":"202","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":9,"column":7,"nodeType":"170","messageId":"171","endLine":9,"endColumn":18},{"ruleId":"168","severity":1,"message":"204","line":25,"column":11,"nodeType":"170","messageId":"171","endLine":25,"endColumn":18},{"ruleId":"168","severity":1,"message":"205","line":25,"column":20,"nodeType":"170","messageId":"171","endLine":25,"endColumn":30},{"ruleId":"168","severity":1,"message":"206","line":2,"column":70,"nodeType":"170","messageId":"171","endLine":2,"endColumn":74},{"ruleId":"168","severity":1,"message":"202","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":10,"column":7,"nodeType":"170","messageId":"171","endLine":10,"endColumn":18},{"ruleId":"168","severity":1,"message":"204","line":26,"column":11,"nodeType":"170","messageId":"171","endLine":26,"endColumn":18},{"ruleId":"168","severity":1,"message":"205","line":26,"column":20,"nodeType":"170","messageId":"171","endLine":26,"endColumn":30},{"ruleId":"168","severity":1,"message":"206","line":2,"column":70,"nodeType":"170","messageId":"171","endLine":2,"endColumn":74},{"ruleId":"168","severity":1,"message":"202","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":12,"column":7,"nodeType":"170","messageId":"171","endLine":12,"endColumn":18},{"ruleId":"168","severity":1,"message":"207","line":17,"column":11,"nodeType":"170","messageId":"171","endLine":17,"endColumn":15},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'BrowserHeaderAdmin' is defined but never used.","Identifier","unusedVar","'AdminServiceManagement' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'Button' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'Info' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'MyComponent' is defined but never used.","'dataStaff' is assigned a value but never used.","'setDataStaff' is assigned a value but never used.","'Checkbox' is defined but never used.","'buttonLabel' is assigned a value but never used.","'idStaff' is assigned a value but never used.","'setIDStaff' is assigned a value but never used.","'Text' is defined but never used.","'text' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [props.history]",{"range":"213","text":"214"},[488,490],"[props.history]"]