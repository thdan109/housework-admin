[{"E:\\Final\\LV\\react-browser\\src\\index.js":"1","E:\\Final\\LV\\react-browser\\src\\reportWebVitals.js":"2","E:\\Final\\LV\\react-browser\\src\\App.js":"3","E:\\Final\\LV\\react-browser\\src\\components\\bootstrap.js":"4","E:\\Final\\LV\\react-browser\\src\\pages\\BrowserHeaderAdmin.js":"5","E:\\Final\\LV\\react-browser\\src\\components\\AdminServiceManagement.js":"6","E:\\Final\\LV\\react-browser\\src\\pages\\loginAdmin.Page.js":"7","E:\\Final\\LV\\react-browser\\src\\components\\test.js":"8","E:\\Final\\LV\\react-browser\\src\\components\\CustomerHeader.js":"9","E:\\Final\\LV\\react-browser\\src\\components\\StaffManangent.js":"10","E:\\Final\\LV\\react-browser\\src\\components\\CustomerManagement.js":"11","E:\\Final\\LV\\react-browser\\src\\components\\AdminOrderManagement.js":"12","E:\\Final\\LV\\react-browser\\src\\components\\CookingService.js":"13","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackAdmin.js":"14","E:\\Final\\LV\\react-browser\\src\\components\\getDataStaffFree.js":"15","E:\\Final\\LV\\react-browser\\src\\components\\ModalAssignment.js":"16","E:\\Final\\LV\\react-browser\\src\\components\\ClearService.js":"17","E:\\Final\\LV\\react-browser\\src\\components\\ModalClear.js":"18","E:\\Final\\LV\\react-browser\\src\\components\\WashingService.js":"19","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalWashing.js":"20","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalChangeService.js":"21","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddService.js":"22","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddStaff.js":"23","E:\\Final\\LV\\react-browser\\src\\components\\AdminStatisticalManagement.js":"24","E:\\Final\\LV\\react-browser\\src\\components\\CookingSaveService.js":"25","E:\\Final\\LV\\react-browser\\src\\components\\ClearSaveService.js":"26","E:\\Final\\LV\\react-browser\\src\\components\\WashingSaveService.js":"27","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackFromCustomer.js":"28","E:\\Final\\LV\\react-browser\\src\\components\\ReportStaff.js":"29","E:\\Final\\LV\\react-browser\\src\\components\\SalaryStaff.js":"30","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalUpdateSalary.js":"31"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2749,"mtime":1619857305149,"results":"35","hashOfConfig":"33"},{"size":46,"mtime":1612539728153,"results":"36","hashOfConfig":"33"},{"size":3230,"mtime":1619831285772,"results":"37","hashOfConfig":"33"},{"size":5417,"mtime":1617869418918,"results":"38","hashOfConfig":"33"},{"size":2070,"mtime":1615133772662,"results":"39","hashOfConfig":"33"},{"size":7346,"mtime":1619945129178,"results":"40","hashOfConfig":"33"},{"size":166,"mtime":1613874093864,"results":"41","hashOfConfig":"33"},{"size":5505,"mtime":1618165282233,"results":"42","hashOfConfig":"33"},{"size":5313,"mtime":1619752095330,"results":"43","hashOfConfig":"33"},{"size":5706,"mtime":1619946740424,"results":"44","hashOfConfig":"33"},{"size":6958,"mtime":1619946864371,"results":"45","hashOfConfig":"33"},{"size":1382,"mtime":1616900556634,"results":"46","hashOfConfig":"33"},{"size":1387,"mtime":1616914095844,"results":"47","hashOfConfig":"33"},{"size":3439,"mtime":1618819910797,"results":"48","hashOfConfig":"33"},{"size":6549,"mtime":1619946881510,"results":"49","hashOfConfig":"33"},{"size":3417,"mtime":1619076764780,"results":"50","hashOfConfig":"33"},{"size":7048,"mtime":1619946900831,"results":"51","hashOfConfig":"33"},{"size":3498,"mtime":1618803571486,"results":"52","hashOfConfig":"33"},{"size":4331,"mtime":1619887513646,"results":"53","hashOfConfig":"33"},{"size":6120,"mtime":1619434966121,"results":"54","hashOfConfig":"33"},{"size":7609,"mtime":1618175862444,"results":"55","hashOfConfig":"33"},{"size":4159,"mtime":1619947031567,"results":"56","hashOfConfig":"33"},{"size":5841,"mtime":1619425687238,"results":"57","hashOfConfig":"33"},{"size":5621,"mtime":1619425661867,"results":"58","hashOfConfig":"33"},{"size":5681,"mtime":1619425948300,"results":"59","hashOfConfig":"33"},{"size":5010,"mtime":1619852347632,"results":"60","hashOfConfig":"33"},{"size":5032,"mtime":1619856214432,"results":"61","hashOfConfig":"33"},{"size":7650,"mtime":1619977372250,"results":"62","hashOfConfig":"33"},{"size":4680,"mtime":1619944998334,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ckdpz6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"66"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"66"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"66"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"66"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"66"},"E:\\Final\\LV\\react-browser\\src\\index.js",[],["153","154"],"E:\\Final\\LV\\react-browser\\src\\reportWebVitals.js",[],"E:\\Final\\LV\\react-browser\\src\\App.js",["155","156","157"],"import React, { useEffect} from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport LoginAdmin from './pages/loginAdmin.Page';\nimport BrowserHeaderAdmin from './pages/BrowserHeaderAdmin.js'\nimport AdminServiceManagement from './components/AdminServiceManagement';\nimport CustomerHeader from './components/CustomerHeader'\nimport StaffManagement from './components/StaffManangent';\nimport CustomerManagement from './components/CustomerManagement';\nimport ServiceManagement from './components/AdminServiceManagement';\nimport OrderManagement from './components/AdminOrderManagement'\nimport SaveOrderManagement from './components/AdminStatisticalManagement'\nimport MyComponent from './components/FeedbackAdmin'\nimport Feedback from './components/FeedbackFromCustomer'\nimport Report from './components/ReportStaff'\nimport Salary from './components/SalaryStaff'\n\nimport Test from './components/test';\nimport Cookies from 'js-cookie';\nimport './App.css'\nconst  App = () => {\n   useEffect(()=>{\n      // TestConnect();\n   },[])\n   return (\n      (Cookies.get('IdAdmin'))?\n      <Router>\n         <div className=\"ContainerApp\">\n            <Route path='/' exact component={CustomerHeader} />\n            <div className='LeftAdmin'>\n               {/* <Route path='/admin' component={BrowserHeaderAdmin}/>   */}\n               <Route  path='/admin' component={Test} />\n               {/* <Route path='/admin/staffs' component={StaffManagement} /> \n               <Route path='/admin/customers' component={CustomerManagement} /> \n               <Route path='/admin/services' component={ServiceManagement} />   */}\n            </div>\n            <div className='RightAdmin'>\n               {/* <Route path='/admin/services' exact  component={AdminServiceManagement} /> */}\n               <Route path='/admin/staffs' component={StaffManagement} /> \n               <Route path='/admin/customers' component={CustomerManagement} /> \n               <Route path='/admin/services' component={ServiceManagement} />  \n               <Route path='/admin/orders' component={OrderManagement} />\n               <Route path='/admin/saveorders' component={SaveOrderManagement} /> \n               <Route path='/admin/feedbacks' component={Feedback} />\n               <Route path='/admin/reports' component={Report} />\n               <Route path='/admin/salary' component={Salary} />\n            </div>    \n              \n         </div>\n      </Router>\n      :\n      <Router>\n         <div className=\"ContainerApp\">   \n            <Route path='/' exact component={CustomerHeader} />        \n            <Route path='/admin' exact component={LoginAdmin} />\n         </div>            \n      </Router>                  \n  );\n\n}\n\nexport default App;\n","E:\\Final\\LV\\react-browser\\src\\components\\bootstrap.js",[],"E:\\Final\\LV\\react-browser\\src\\pages\\BrowserHeaderAdmin.js",["158","159","160","161","162","163"],"import '../styles/BrowserHeaderAdmin.css';\r\nimport React, {useState } from \"react\";\r\nimport { BrowserRouter as Route, Router , Link } from \"react-router-dom\";\r\nimport AdminServiceManagement from '../components/AdminServiceManagement.js'\r\nimport '../components/bootstrap';\r\nimport Cookies from 'js-cookie'\r\nimport {\r\n   NavLink\r\n } from 'reactstrap';\r\n \r\n\r\n\r\nconst BrowserHeaderAdmin = (props) => {\r\n\r\n   const [isOpen, setIsOpen] = useState(false);\r\n  \r\n   const LogOut = () =>{\r\n      Cookies.remove('IdAdmin');\r\n      window.location.reload(1)\r\n   }\r\n   return (\r\n      <div className='ContainerBrowserHeader'> \r\n         <div className='ContainerMenuAdmin'>  \r\n            <div className='parentMenuAdmin'>\r\n               <div className='MenuAdmin'>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/services\" className=\"LinkMenu\">Quản lý dịch vụ</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/staffs\" className=\"LinkMenu\">Quản lý Nhân viên</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/customers\" className=\"LinkMenu\">Quản lý Khách hàng</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/orders\" className=\"LinkMenu\">Quản lý Công việc</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/saveorders\" className=\"LinkMenu\">Việc đã lưu</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/feedbacks\" className=\"LinkMenu\">Quản lý Phản hồi</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/salary\" className=\"LinkMenu\">Trò chuyện trực tiếp</Link>\r\n                  </NavLink>\r\n                  <NavLink className='NavLinkMenuAdmin'>\r\n                     <Link to=\"/admin/statistic\" className=\"LinkMenu\">Thống kê</Link>\r\n                  </NavLink>\r\n                  {/* <div className='ContainerInfor' >\r\n                     <div>\r\n                        <NavLink className='inforAd'>\r\n                           Tên: {Cookies.get('NameAdmin')} <br/>\r\n                        </NavLink>\r\n                        <NavLink className='inforAd'>\r\n                           Chức vụ: {Cookies.get('Position')}\r\n                        </NavLink>\r\n                     </div>\r\n                     <div onClick={()=>LogOut()}>  \r\n                        <NavLink className='inforAd'>\r\n                           <Link className='logout-link'>Đăng xuất</Link>\r\n                        </NavLink> \r\n                     </div>\r\n                  </div> */}\r\n               </div>\r\n            </div>                   \r\n            <div className='TableMaterial'>\r\n               \r\n            </div>      \r\n\r\n         </div>\r\n         \r\n              \r\n         \r\n      </div>\r\n\r\n   )\r\n\r\n}\r\nexport default BrowserHeaderAdmin;","E:\\Final\\LV\\react-browser\\src\\components\\AdminServiceManagement.js",["164"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport ModalChangeService from './modals/ModalChangeService'\r\nimport ModalAddService from './modals/ModalAddService'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  ServiceManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = async() =>{\r\n      console.log('GetDataService');\r\n      Axios.get('http://localhost:216/service/dataService').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   \r\n   const  [columns, setColumns] = useState([\r\n      // { title: 'Action', render: rowData =>(\r\n      //    <>   \r\n      //       <ModalAddService/>\r\n      //    </>\r\n      //    )\r\n      // },\r\n      { title: 'Id dịch vụ', field: '_id' },\r\n      { title: 'Tên dịch vụ', field: 'nameService' },\r\n      { title: 'Mô tả dịch vụ', field: 'descriptionService'},\r\n      { title: 'Giá dịch vụ', field: 'prince', render: rowData=>(\r\n         rowData.prince.map(dt => <p>{dt}</p> )\r\n      )},\r\n      { title: '', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalChangeService data={{id: rowData._id}} />\r\n         </>\r\n      )},\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n \r\n   return (\r\n   <div>\r\n      {/* <button onClick={()=>console.log(data)}>aaaaaaaaaaaaaaaa</button> */}\r\n      <ModalAddService />\r\n      <MaterialTable\r\n      title=\"Quản lý Dịch vụ\"\r\n      icons={tableIcons}\r\n      columns={columns}\r\n      data={data}\r\n      editable={{\r\n      // onRowAdd: newData =>\r\n      //      new Promise((resolve, reject) => {\r\n      //        setTimeout(() => {\r\n      //          setData([...data, newData]);\r\n      //          Axios.post('http://localhost:216/service/addService', \r\n      //             newData\r\n      //          )\r\n      //          resolve();\r\n      //        }, 1000)\r\n            \r\n      //      }),\r\n         // onRowUpdate: (newData, oldData) =>\r\n         //   new Promise((resolve, reject) => {\r\n         //     setTimeout(() => {\r\n         //       const dataUpdate = [...data];\r\n         //       const index = oldData.tableData.id;\r\n         //       dataUpdate[index] = newData;\r\n         //       setData([...dataUpdate]);\r\n         //          Axios.post('http://localhost:216/service/updatedataService',\r\n         //             newData\r\n         //          )\r\n         //       resolve();\r\n         //     }, 1000)\r\n         //   }),\r\n         //   onRowDelete: oldData =>\r\n         //   new Promise((resolve, reject) => {\r\n         //       setTimeout(() => {\r\n         //           const dataDelete = [...data];\r\n         //           const index = oldData.tableData.id;\r\n         //           dataDelete.splice(index, 1);\r\n         //           setData([...dataDelete]);\r\n         //             const idService = oldData._id;\r\n         //             Axios.get('http://localhost:216/service/delService/id='+idService).then(res =>{\r\n         //                // getDataStaff()\r\n         //             })\r\n         //           resolve();\r\n         //       }, 1000);\r\n         //   })\r\n         }}\r\n     />\r\n   </div>\r\n   )\r\n }\r\n\r\n\r\n export default ServiceManagement;","E:\\Final\\LV\\react-browser\\src\\pages\\loginAdmin.Page.js",["165","166","167","168"],"import React, { useState, useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Button , TextField} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport  '../styles/LoginAdmin.css';\r\n\r\n\r\nconst LoginAdmin = (props) =>{\r\n   const history = useHistory()\r\n   useEffect(()=>{\r\n      if (Cookies.get('IdAdmin')){\r\n         props.history.push('/admin')\r\n      }\r\n   },[])\r\n   const LoginAdmin = (e) =>{\r\n      e.preventDefault();\r\n      const {usernameEntered, passwordEntered } = e.target;\r\n      Axios.post('http://localhost:216/admin', {\r\n         username: usernameEntered.value,\r\n         password: passwordEntered.value\r\n      }).then(res =>{\r\n         if (res.data.id){\r\n            Cookies.set('IdAdmin',res.data.id,{expires: 7})\r\n            Cookies.set('Position',res.data.position,{expires: 7})\r\n            Cookies.set('NameAdmin',res.data.name, {expires: 7})\r\n            window.location.reload(1)\r\n         }else{\r\n            window.location.reload(1) \r\n         }\r\n      })\r\n   }\r\n\r\n   return(\r\n\r\n      <div className='ContainerLoginAdmin'>\r\n         <div className='LoginAdmin'>\r\n            <div className='TitleLoginAdmin'>\r\n               LOGIN\r\n            </div>\r\n               <form onSubmit={(e)=>LoginAdmin(e)} noValidate  autoComplete=\"off\" >\r\n                  <div className='TextfieldUsername'>\r\n                     <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name='usernameEntered' />\r\n                  </div>\r\n                  <div className='TextfieldPassword'>\r\n                     <TextField id=\"outlined-basic\" type='password' label=\"Password\" variant=\"outlined\" name='passwordEntered'/>\r\n                  </div>\r\n                  {/* <div className='ButtonLogIn'> */}\r\n                     <Button className='btnlogin' type='sunmit'>LOGIN</Button>\r\n                  {/* </div> */}\r\n               </form>\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n   \r\n\r\n}\r\n\r\nexport default LoginAdmin;","E:\\Final\\LV\\react-browser\\src\\components\\test.js",["169","170","171","172","173","174","175","176","177","178","179"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem,NavLink,Navbar, Nav, NavItem,  UncontrolledDropdown } from 'reactstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../styles/test.css';\r\nimport MenuIcon from '@material-ui/icons/Apps';\r\nimport {Link} from 'react-router-dom'\r\nimport {HomeWorkSharp, PersonPinSharp, AccessibilitySharp, WorkSharp, FeedbackSharp, AssignmentTurnedInSharp,EqualizerSharp, ReportProblem , MonetizationOn} from '@material-ui/icons'\r\nimport Cookies from 'js-cookie';\r\n\r\nconst useStyles = makeStyles({\r\n   list: {\r\n      width: 250,\r\n   },\r\n   fullList: {\r\n      width: 'auto',\r\n   },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer(props) {\r\n   const classes = useStyles();\r\n   const history = useHistory()\r\n   const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n   const toggle = () => setDropdownOpen(prevState => !prevState);\r\n   const [state, setState] = React.useState({\r\n      top: false,\r\n      left: false,\r\n      bottom: false,\r\n      right: false,\r\n   });\r\n   const toggleDrawer = (anchor, open) => (event) => {\r\n      if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n         return;\r\n      }\r\n\r\n      setState({ ...state, [anchor]: open });\r\n   };\r\n   const LogOut = () =>{\r\n      Cookies.remove('IdAdmin');\r\n      history.push(\"/admin\"); \r\n      window.location.reload(1);\r\n     \r\n      \r\n   }\r\n\r\n   const list = (anchor) => (\r\n      <div\r\n         className={clsx(classes.list, {\r\n         [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n         })}\r\n         role=\"presentation\"\r\n         onClick={toggleDrawer(anchor, false)}\r\n         onKeyDown={toggleDrawer(anchor, false)}\r\n         style={{backgroundColor: '#DCDCDC', height: '100%'}}\r\n      >\r\n     \r\n\r\n      <List style={{}}>    \r\n               {  [['Quản lý dịch vụ',\"/admin/services\",<HomeWorkSharp style={{ color: '#043927' }}/>], \r\n                  ['Quản lý Nhân viên',\"/admin/staffs\", <PersonPinSharp style={{ color: '#043927' }}/>], \r\n                  ['Quản lý Khách hàng',\"/admin/customers\",<AccessibilitySharp style={{ color: '#043927' }}/>], \r\n                  ['Quản lý Công việc',\"/admin/orders\", <WorkSharp style={{ color: '#043927' }}/>],\r\n                  ['Việc đã hoàn thành',\"/admin/saveorders\", <AssignmentTurnedInSharp style={{ color: '#043927' }}/>],\r\n                  ['Quản lý Phản hồi',\"/admin/feedbacks\", <FeedbackSharp style={{ color: '#043927' }}/>],\r\n                  ['Quản lý Báo cáo',\"/admin/reports\", <ReportProblem style={{ color: '#043927' }}/>],\r\n                  ['Lương nhân viên',\"/admin/salary\",<MonetizationOn style={{ color: '#043927' }}/>],\r\n                  ['Thống kê',\"/admin/statistic\", <EqualizerSharp style={{ color: '#043927' }}/>]].map(([text,link,icon], index) => (\r\n                   <Link className='Link' to={link}>\r\n                     <ListItem button key={text}>\r\n                        {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                        <ListItemIcon >{icon}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                     </ListItem>\r\n                  </Link>\r\n               ))}   \r\n      </List>\r\n      <Divider />\r\n      <List>\r\n         {/* <ListItemText style={{textAlign: \"center\"}}><b>Thông tin</b></ListItemText>\r\n         {[['Tên',Cookies.get('NameAdmin')], ['Chức vụ: ',Cookies.get('Position')]].map(([title,text], index) => (\r\n            <ListItem button key={text}>\r\n               <ListItemIcon>{icon}</ListItemIcon>\r\n               <ListItemText primary={title}/>\r\n               <ListItemText primary={text} />\r\n            </ListItem>\r\n         ))} */}\r\n         {/* <div style={{ paddingLeft: 20}}>\r\n            <ListItemText style={{paddingBottom: 20}}><b>Thông tin</b></ListItemText>\r\n            <ListItemText style={{paddingBottom: 5, borderBottom: \"1px solid black\"}}>Tên: {Cookies.get('NameAdmin')}</ListItemText>\r\n            <ListItemText style={{paddingBottom: 5, borderBottom: \"1px solid black\"}}>Chức vụ: {Cookies.get('Position')}</ListItemText>\r\n            <ListItemText onClick={()=>LogOut()} style={{paddingBottom: 5, borderBottom: \"1px solid black\"}}><Link className='logout-link'>Đăng xuất</Link></ListItemText>\r\n         </div> */}\r\n         \r\n\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n       <div className='header'>\r\n         {['Menu'].map((anchor) => (\r\n         <React.Fragment key={anchor}>\r\n               {\r\n               /* < button\r\n               \r\n                  className='btnMenu'\r\n                  onClick={toggleDrawer(anchor, true)}\r\n                  // startIcon={<MenuIcon className='icon' />}\r\n               > \r\n                     {anchor}\r\n               </button> */}\r\n               <div className='divMenu'>\r\n                  <div className=\"divContainer\"  >\r\n                     <Menu style={{ fontSize: 45, color: 'white'}} onClick={toggleDrawer(anchor, true)}/> \r\n                     <div className=\"divInfor\">\r\n                        <UncontrolledDropdown setActiveFromChild>\r\n                           <DropdownToggle tag=\"a\" className=\"nav-link\" caret>\r\n                                 <span style={{fontWeight: 'bold',color: \"white\"}}>ADMIN</span> \r\n                           </DropdownToggle>\r\n                           <DropdownMenu>\r\n                              <DropdownItem style={{backgroundColor: '#DCDCDC'}}><Link className='Link'> <span style={{fontWeight: 'bold', }}>Tên</span><span style={{float: 'right'}}>{Cookies.get('NameAdmin')}</span> </Link></DropdownItem>\r\n                              <DropdownItem style={{backgroundColor: '#D3D3D3'}}><Link className='Link'> <span style={{fontWeight: 'bold', }}>Chức vụ</span><span style={{float: 'right'}}>{Cookies.get('Position')}</span> </Link></DropdownItem>\r\n                              <DropdownItem onClick={()=>LogOut()} style={{backgroundColor: '#DCDCDC'}}><Link className='Link'>Đăng xuất</Link></DropdownItem>\r\n                           </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               \r\n\r\n\r\n            <SwipeableDrawer\r\n                  anchor={anchor}\r\n                  open={state[anchor]}\r\n                  onClose={toggleDrawer(anchor, false)}\r\n                  onOpen={toggleDrawer(anchor, true)}\r\n               >\r\n                  {list(anchor)}\r\n               </SwipeableDrawer>\r\n         </React.Fragment>\r\n         ))}\r\n       </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","E:\\Final\\LV\\react-browser\\src\\components\\CustomerHeader.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\StaffManangent.js",["180","181"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport ModalAddStaff from './modals/ModalAddStaff'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  StaffManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('GetDataStaff');\r\n      Axios.get('http://localhost:216/staff/dataStaff').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n     { title: 'Họ và Tên', field: 'fullnameStaff' },\r\n     { title: 'Tên đăng nhập', field: 'usernameStaff'},\r\n   //   { title: 'Mật khẩu', field: 'passwordStaff' },\r\n     { title: 'Ngày sinh', field: 'birthdayStaff', type: 'date'},\r\n     { title: 'Số điện thoại', field: 'numberPhone', type: 'numberic'},\r\n     { title: 'Địa chỉ', field: 'addressStaff'},\r\n     { title: 'Số CMND', field: 'IDCardStaff'},\r\n     { title: 'Giới tính', field: 'sex'},\r\n     { title: \"Nơi sinh\", field: 'birthPlace'},\r\n     { title: 'Bộ phận',  field: 'department'},\r\n     { title: 'Ngày tham gia',  field: 'joinDay', type: 'date'}\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n\r\n   const addStaff = () =>{\r\n      console.log('aaaaaaa');\r\n   }\r\n \r\n   return (\r\n      <div>\r\n         <ModalAddStaff  />\r\n         <MaterialTable\r\n            title=\"Quản lý Nhân sự\"\r\n            icons={tableIcons}\r\n            columns={columns}\r\n            data={data}\r\n            editable={{\r\n               // onRowAdd: newData =>\r\n               //   new Promise((resolve, reject) => {\r\n               //     setTimeout(() => {\r\n               //       setData([...data, newData]);\r\n               //       Axios.post('http://localhost:216/staff/addStaff', \r\n               //          newData\r\n               //       )\r\n               //       resolve();\r\n               //     }, 1000)\r\n                  \r\n               //   }),\r\n               onRowUpdate: (newData, oldData) =>\r\n               new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                     const dataUpdate = [...data];\r\n                     const index = oldData.tableData.id;\r\n                     dataUpdate[index] = newData;\r\n                     setData([...dataUpdate]);\r\n                        Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                           newData\r\n                        )\r\n                     resolve();\r\n                  }, 1000)\r\n               }),\r\n               onRowDelete: oldData =>\r\n               new Promise((resolve, reject) => {\r\n                     setTimeout(() => {\r\n                        const dataDelete = [...data];\r\n                        const index = oldData.tableData.id;\r\n                        dataDelete.splice(index, 1);\r\n                        setData([...dataDelete]);\r\n                           const idStaff = oldData._id;\r\n                           Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n                              // getDataStaff()\r\n                           })\r\n                        resolve();\r\n                     }, 1000);\r\n               })\r\n               }}\r\n         />\r\n      </div>\r\n   )\r\n }\r\n\r\n\r\n export default StaffManagement;","E:\\Final\\LV\\react-browser\\src\\components\\CustomerManagement.js",["182"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\nimport '../styles/CustomerManager.css'\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CustomerManagement = () => {\r\n   useEffect(()=>{\r\n      getDataStaff()\r\n   },[])\r\n\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('GetDataStaff');\r\n      Axios.get('http://localhost:216/user/dataUser').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n     { title: 'Họ và Tên', field: 'fullname' },\r\n     { title: 'Tên đăng nhập', field: 'username'},\r\n     { title: 'Mật khẩu', field: 'password' },\r\n     { title: 'Ngày sinh', field: 'birthday', type: 'date'},\r\n     { title: 'Địa chỉ', field: 'address'},\r\n     { title: 'Số CMND', field: 'IDCard'},\r\n     { title: 'Giới tính', field: 'sex'},\r\n     { title: \"Email\", field: 'email'},\r\n   ]);\r\n   \r\n   const [data, setData] = useState([]);\r\n \r\n   return (\r\n      <div className='TableCustomer'>\r\n         <div className='Table'>\r\n         <MaterialTable\r\n            title=\"Quản lý Khách Hàng\"\r\n            icons={tableIcons}\r\n            columns={columns}\r\n            data={data}\r\n            editable={{\r\n               // onRowAdd: newData =>\r\n               //   new Promise((resolve, reject) => {\r\n               //     setTimeout(() => {\r\n               //       setData([...data, newData]);\r\n               //       // Axios.post('http://localhost:216/staff/addStaff', \r\n               //       //    newData\r\n               //       // )\r\n               //       resolve();\r\n               //     }, 1000)\r\n                  \r\n               //   }),\r\n               // onRowUpdate: (newData, oldData) =>\r\n               //   new Promise((resolve, reject) => {\r\n               //     setTimeout(() => {\r\n               //       const dataUpdate = [...data];\r\n               //       const index = oldData.tableData.id;\r\n               //       dataUpdate[index] = newData;\r\n               //       setData([...dataUpdate]);\r\n               //          // Axios.post('http://localhost:216/staff/updatedataStaff',\r\n               //          //    newData\r\n               //          // )\r\n               //       resolve();\r\n               //     }, 1000)\r\n               //   }),\r\n               onRowDelete: oldData =>\r\n               new Promise((resolve, reject) => {\r\n                     setTimeout(() => {\r\n                        const dataDelete = [...data];\r\n                        const index = oldData.tableData.id;\r\n                        dataDelete.splice(index, 1);\r\n                        setData([...dataDelete]);\r\n                           const idUSer = oldData._id;\r\n                           Axios.get('http://localhost:216/user/delUser/id='+idUSer).then(res =>{\r\n                              // getDataStaff()\r\n                           })\r\n                        resolve();\r\n                     }, 1000);\r\n               })\r\n               }}\r\n         />\r\n         </div>\r\n         \r\n      </div>\r\n   )\r\n  \r\n }\r\n\r\n\r\n export default CustomerManagement;","E:\\Final\\LV\\react-browser\\src\\components\\AdminOrderManagement.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React from 'react'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\n\r\nimport OrderScreen from './CookingService'\r\nimport ClearScreen from './ClearService'\r\nimport WashingComponent from './WashingService'\r\n\r\nimport '../styles/OrderAdmin.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n      selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n}));\r\n\r\nconst AdminOrder = () =>{\r\n\r\n   const [activeTab, setActiveTab] = React.useState('1');\r\n\r\n   const toggle = tab => {\r\n      if(activeTab !== tab) setActiveTab(tab);\r\n   }\r\n   \r\n   const [state, setState] = React.useState({\r\n      order: '',\r\n      name: 'hai',\r\n    });\r\n   const [type, setType] = React.useState({\r\n      cooking: true,\r\n      housework: null,\r\n      washing: null,\r\n      farm: null\r\n   })\r\n   const classes = useStyles();\r\n   const handleChange = (event) => {\r\n      const name = event.target.name;\r\n      setState({\r\n        ...state,\r\n        [name]: event.target.value,\r\n      });\r\n      const option_val = event.target.value\r\n      if (option_val == 1){\r\n         setType({\r\n            cooking:true,\r\n            housework: null,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 2 ){\r\n         setType({\r\n            cooking:null,\r\n            housework: true,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val==3){\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: true,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 4)\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: null,\r\n            farm: true\r\n         })\r\n   }\r\n\r\n\r\n   return(\r\n      <div className=\"ContainerAdminOrder\">\r\n         \r\n         {/* <div className='OptionOrder'>\r\n            \r\n            <FormControl className={classes.formControl}>\r\n               <InputLabel shrink htmlFor=\"age-native-label-placeholder\" >\r\n                 Chọn dịch vụ\r\n               </InputLabel>\r\n               <NativeSelect\r\n                  style={{fontSize: 18}}\r\n                  className='options'\r\n                  value={state.order}\r\n                  onChange={handleChange}\r\n                  inputProps={{\r\n                     name: 'order',\r\n                     id: 'age-native-label-placeholder',\r\n                  }}\r\n               >\r\n                  <option value={1}>Nấu ăn</option>\r\n                  <option value={2}>Dọn dẹp nhà</option>\r\n                  <option value={3}>Giặt ủi</option>\r\n               \r\n                  \r\n               </NativeSelect>\r\n               \r\n            </FormControl>\r\n         </div> */}\r\n      \r\n         <div className='ContainerTable'>\r\n            <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({ active: activeTab === '1' })}\r\n                     onClick={() => { toggle('1'); }}\r\n                  >\r\n                     Nấu ăn\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({ active: activeTab === '2' })}\r\n                     onClick={() => { toggle('2'); }}\r\n                  >\r\n                     Dọn nhà\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({ active: activeTab === '3' })}\r\n                     onClick={() => { toggle('3'); }}\r\n                  >\r\n                     Giặt ủi\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col >\r\n                        <Card>\r\n                           <OrderScreen /> \r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Card>\r\n                     <ClearScreen /> \r\n                  </Card>\r\n                     \r\n               </TabPane>\r\n               <TabPane tabId=\"3\">\r\n                  <Row>\r\n                     <Col>\r\n                        <Card>\r\n                           <WashingComponent /> \r\n                        </Card>\r\n                     </Col>\r\n                    \r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n            {/* {\r\n               \r\n               (type.cooking === true)?\r\n                  <OrderScreen /> \r\n               :           \r\n               (type.housework == true)?\r\n                  // <div>a2</div>\r\n                  <ClearScreen />\r\n               :\r\n               (type.washing === true)?\r\n                  <WashingComponent/>\r\n               :\r\n               // (type.farm === true)?\r\n               // <div>a4</div>\r\n               // : \r\n               <div>kcj</div>\r\n            } */}\r\n         </div>\r\n         \r\n         \r\n\r\n\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AdminOrder","E:\\Final\\LV\\react-browser\\src\\components\\CookingService.js",["198","199","200","201"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CookingOrder = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataOrder();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataOrder = () =>{\r\n      Axios.get('http://localhost:216/cooking/dataCooking').then(res =>{\r\n         setData(res.data)  \r\n      })  \r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/cooking/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getDataOrder()\r\n      }\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Số người ăn\", field: 'number'},\r\n      { title: 'Món ăn', field: 'dishList', render: rowData =>\r\n         rowData.dishList.map((dt, index)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Nhân viên' , field: 'staff', render: rowData=>\r\n         rowData.staff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Đi chợ', field: 'goMarket'},\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Trạng thái', field: 'status', render: rowData => (\r\n         <>\r\n             <select onChange={(e)=>handleChangeStatus(e)} style={{ borderWidth:  0, fontSize: 14}}>\r\n               <option>{rowData.status}</option>\r\n               <option id={rowData._id} value=\"0\">Xác nhận</option>\r\n               <option id={rowData._id} value=\"1\">Đang thực hiện</option>\r\n               {/* <option id={rowData._id} value=\"2\">Đã thanh toán</option> */}\r\n             </select>\r\n         </>\r\n       )},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalAssignment data={[{time:rowData.timeStart}, {date:rowData.date}, {idUser: rowData.idUser}, {id: rowData._id}]} />\r\n         </>\r\n       )},\r\n      //  { title: 'Xử lý', field: 'dataStaff.arrs',render: rowData => (\r\n      //    <>\r\n      //       <AddBox style={{color: 'blue'}} onClick={( ) => submitSave(rowData._id)} />\r\n      //    </>\r\n      //  )},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   const [dataStaff, setDataStaff] = useState({\r\n      arrs: []\r\n   })\r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Quản lý Dịch vụ Nấu ăn\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            // onRowUpdate: (newData, oldData) =>\r\n            // new Promise((resolve, reject) => {\r\n            //    setTimeout(() => {\r\n            //       const dataUpdate = [...data];\r\n            //       const index = oldData.tableData.id;\r\n            //       dataUpdate[index] = newData;\r\n            //       setData([...dataUpdate]);\r\n            //          Axios.post('http://localhost:216/staff/updatedataStaff',\r\n            //             newData\r\n            //          )\r\n            //       resolve();\r\n            //    }, 1000)\r\n            // }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default CookingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackAdmin.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\getDataStaffFree.js",[],"E:\\Final\\LV\\react-browser\\src\\components\\ModalAssignment.js",["202","203","204","205"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalAssignment = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    Axios.post('http://localhost:216/cooking/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      console.log('aaa')\r\n      const data = props.data\r\n      Axios.post('http://localhost:216/staff/statusStaffCooking', {\r\n         dttime: data\r\n      }).then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/cooking/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n \r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e)=>Send(e)}>Chọn</Button>{' '}\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalAssignment","E:\\Final\\LV\\react-browser\\src\\components\\ClearService.js",["206","207"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalClear from './ModalClear'\r\nimport axios from 'axios';\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const ClearOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n   const [data, setData] = useState([]);\r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/clear/getData')\r\n      setData(data.data)\r\n   }\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await axios.post('http://localhost:216/clear/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getData()\r\n      }\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'username' },\r\n      { title: \"Diện tích\", field: 'area'},\r\n      { title: 'Giờ làm', field: 'timeWork'},\r\n      { title: 'Nhân viên' , field: 'nameStaff', \r\n         render: rowData=>\r\n            rowData.nameStaff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      \r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Trạng thái', field: 'status', render: rowData => (\r\n         <>\r\n             <select onChange={(e)=>handleChangeStatus(e)} style={{ borderWidth:  0, fontSize: 14}}>\r\n               <option>{rowData.status}</option>\r\n               <option id={rowData._id} value=\"0\">Xác nhận</option>\r\n               <option id={rowData._id} value=\"1\">Đang thực hiện</option>\r\n               {/* <option id={rowData._id} value=\"2\">Đã thanh toán</option> */}\r\n             </select>\r\n         </>\r\n       )},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalClear data={[{time:rowData.timeStart}, {date:rowData.date}, {id: rowData._id}, {idUser: rowData.idUser}]} />\r\n         </>\r\n       )},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Quản lý Dịch vụ Dọn dẹp nhà\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            // onRowUpdate: (newData, oldData) =>\r\n            // new Promise((resolve, reject) => {\r\n            //    setTimeout(() => {\r\n            //       const dataUpdate = [...data];\r\n            //       const index = oldData.tableData.id;\r\n            //       dataUpdate[index] = newData;\r\n            //       setData([...dataUpdate]);\r\n            //          Axios.post('http://localhost:216/staff/updatedataStaff',\r\n            //             newData\r\n            //          )\r\n            //       resolve();\r\n            //    }, 1000)\r\n            // }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default ClearOrder;","E:\\Final\\LV\\react-browser\\src\\components\\ModalClear.js",["208","209","210","211"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalClear = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    Axios.post('http://localhost:216/clear/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      // console.log('aaa')\r\n      const data = props.data\r\n      Axios.post('http://localhost:216/staff/statusStaff', {\r\n         dttime: data\r\n      }).then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/clear/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e) => Send(e)}>Chọn</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalClear",["212","213"],"E:\\Final\\LV\\react-browser\\src\\components\\WashingService.js",["214","215"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalWashing from './modals/ModalWashing'\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const WashingOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n\r\n\r\n   const [data, setData] = useState([]);\r\n   \r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/washing/getData')\r\n      // console.log(data.data);\r\n      setData(data.data)\r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/washing/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getData()\r\n      }\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Ngày gửi\", field: 'dateSend', type: 'date'},\r\n      { title: 'Giờ gửi', field: 'timeSend'},\r\n      { title: \"Ngày nhận\", field: 'dateTake', type: 'date'},\r\n      { title: 'Giờ nhận', field: 'timeTake'},\r\n      { title: 'Nhân viên', field: 'staff' ,\r\n         render: rowData=>\r\n            rowData.staff.map((dt)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Ghi chú', field: 'note'},\r\n      { title: 'Trạng thái', field: 'status', render: rowData => (\r\n         <>\r\n             <select onChange={(e)=>handleChangeStatus(e)} style={{ borderWidth:  0, fontSize: 14}}>\r\n               <option>{rowData.status}</option>\r\n               {/* <option id={rowData._id} value=\"0\">Đang chờ xác nhận</option> */}\r\n               <option id={rowData._id} value=\"0\">Đã Xác nhận</option>\r\n               <option id={rowData._id} value=\"2\">Đã đến</option>\r\n               <option id={rowData._id} value=\"1\">Đang thực hiện</option>\r\n               {/* <option id={rowData._id} value=\"2\">Đã thanh toán</option> */}\r\n             </select>\r\n         </>\r\n       )},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n      { title: 'Phân công', field: 'dataStaff.arrs',render: rowData => (\r\n         <>\r\n            <ModalWashing \r\n               data={[\r\n                  { timeSend: rowData.timeSend },\r\n                  { timeTake: rowData.timeTake }, \r\n                  { dateSend: rowData.dateSend }, \r\n                  { dateTake: rowData.dateTake },\r\n                  { idUser: rowData.idUser},\r\n                  { id: rowData._id},                 \r\n               ]} \r\n            />\r\n         </>\r\n       )},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Giặt ủi\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            // onRowUpdate: (newData, oldData) =>\r\n            // new Promise((resolve, reject) => {\r\n            //    setTimeout(() => {\r\n            //       const dataUpdate = [...data];\r\n            //       const index = oldData.tableData.id;\r\n            //       dataUpdate[index] = newData;\r\n            //       setData([...dataUpdate]);\r\n            //          Axios.post('http://localhost:216/staff/updatedataStaff',\r\n            //             newData\r\n            //          )\r\n            //       resolve();\r\n            //    }, 1000)\r\n            // }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default WashingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalWashing.js",["216","217","218","219"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport '../../styles/ModalAssignment.css'\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst ModalWashing = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [checked, setChecked] = React.useState()\r\n\r\n   // const ClickAdd = (e) =>{\r\n   //    console.log(e.target.value);\r\n   //    const id =  e.target.value;\r\n   //    const datatime = props.data\r\n   //    console.log(datatime);\r\n   //    Axios.post('http://localhost:216/washing/addStaff',{\r\n   //       id: id,\r\n   //       dttime: datatime\r\n   //    })\r\n   //    // getDataStaff()\r\n   //    toggle()\r\n   //    window.location.reload(1)\r\n   // }\r\n\r\n   const getDataStaff = () =>{\r\n      // console.log('aaa')b\r\n      const data = props.data\r\n      console.log(data);\r\n      Axios.post('http://localhost:216/staff/statusStaffWash', {\r\n         dttime: data\r\n      })\r\n      .then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n   const handleChange = ( e ) =>{\r\n      if (e.target.id){\r\n         setChecked({...checked, [e.target.id]: e.target.checked})\r\n      }\r\n   }\r\n\r\n   const Send =  (e) =>{\r\n      Axios.post('http://localhost:216/washing/addStaff',{\r\n         dataStaff: checked,\r\n         data: props.data\r\n      })\r\n      toggle()\r\n      window.location.reload(1)\r\n   }\r\n\r\n\r\n   return (\r\n      <div>\r\n\r\n         <Button color=\"primary\" onClick={()=>toggle()}>Danh sách</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Phân công nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"ContainerTable\">\r\n                  <table border='1' className='table'>\r\n                     <tr>\r\n                        <th>Action</th>\r\n                        <th>ID NV</th>\r\n                        <th>Tên nhân viên</th>\r\n                     </tr>\r\n                     {\r\n                        state.map(dt=>(\r\n                           <tr>\r\n                              <td style={{textAlign: 'center'}}>\r\n                                 {/* <button style={{border: 0}} onClick={(e)=>ClickAdd(e)} value={dt._id}>Chọn</button> */}\r\n                                 <input type='checkbox' id={dt._id}  value={dt._id} onChange={(e) => handleChange(e)} \r\n                                 />\r\n                              </td>\r\n                              <td>{dt._id}</td>\r\n                              <td>{dt.fullnameStaff}</td>\r\n                           </tr>\r\n                        ))\r\n                     }\r\n                     \r\n                  </table>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={(e)=>Send(e)}>Chọn</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalWashing","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalChangeService.js",["220","221","222","223","224"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text ,Label} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalChangeService.css'\r\nimport { Checkbox } from '@material-ui/core';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalChangeService = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      // getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [dataUpdate, setDataUpdate] = React.useState([  ])\r\n   \r\n\r\n   const getDataServiceById = async() =>{\r\n      // console.log('aaa')\r\n      const id = props.data.id\r\n      console.log(id);\r\n      await axios.get('http://localhost:216/service/dataServiceByID/id='+id)\r\n      .then(res =>{\r\n         setState(res.data)\r\n      })\r\n   }\r\n\r\n   const handleChange = async( e ) =>{\r\n      console.log(e.target.value)\r\n      setDataUpdate({\r\n         ...dataUpdate,\r\n         [e.target.id] : e.target.value\r\n      })\r\n   }\r\n\r\n   const sendDataUpdateById = async( ) =>{\r\n      const id = props.data.id\r\n      const dataSendUpdate = dataUpdate\r\n      await axios.post('http://localhost:216/service/updataService',{\r\n         id : id,\r\n         data :dataSendUpdate\r\n      }).then(res =>{\r\n         if (res.data.Update === 'Oke'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Cập nhật!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n          \r\n         }\r\n      })\r\n      \r\n      \r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <Button color=\"primary\" \r\n            onClick={()=>{toggle()\r\n            getDataServiceById()}\r\n         }>Cập nhật</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader  toggle={toggle}>Cập nhật dịch vụ</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  <div>\r\n                     {/* <div className='divContainerInput'>\r\n                        <div className='TitleName'>ID dịch vụ</div>\r\n                        <Input placeholder=\"Aaaaaaaaaa\" className='Input' /> \r\n                     </div> */}\r\n                     <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Tên dịch vụ</Label>\r\n                        <Input placeholder={state.nameService } id='nameService' onChange={(val) => handleChange(val)}  className='Input'/> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Mô tả</Label>\r\n                        <Input type=\"textarea\" id='description' onChange={(val) => handleChange(val)} placeholder={state.descriptionService} style={{ height: 100 }} /> \r\n                     </div>\r\n                     {\r\n                        (state.prince) &&\r\n                        state.prince.map((dt,index) =>\r\n                           <div className='divContainerInput'>\r\n                              <Label className='TitleName'>Chỉ tiêu : giá</Label>\r\n                              <Input placeholder={dt} id={index+1} onChange={(val) => handleChange(val)}  className='Input'/> \r\n                           </div>   \r\n                        )\r\n                     }\r\n                  </div>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={()=>{\r\n                     // toggle()\r\n                     sendDataUpdateById()\r\n               }}>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n               <Button color=\"primary\" onClick={()=>console.log(dataUpdate)}>Đồng ý</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalChangeService","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddService.js",["225","226","227","228"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text, Label, Row, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalAddService.css';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Close from '@material-ui/icons/Close'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalChangeService = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   \r\n   const [arrayInput, setArrayInput] = React.useState([]);\r\n   const [text, setText] = React.useState(\"\");\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      setModal(!modal)\r\n      // AddService()\r\n   } \r\n\r\n   const [ state, setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n  \r\n   const handleChange = (value, index) => {\r\n      var a = [...arrayInput];\r\n      a[Number(index)].value = value.target.value;\r\n      setArrayInput(a);\r\n      console.log(arrayInput);\r\n      setText(index + \" with value: \" + value.target.value);\r\n   }\r\n\r\n   const handleChangeDel = (index) => {\r\n      var a = [...arrayInput];\r\n      a.splice(index, 1);\r\n      setArrayInput(a);\r\n      // console.log(arrayInput);\r\n   }\r\n\r\n   const handleChangeText = async(e)  =>{\r\n      // console.log(e.target.value);\r\n      setState({\r\n         ...state,\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n\r\n   const AddService = async() =>{\r\n      await axios.post('http://localhost:216/service/addService',{\r\n         dataSend: state,\r\n         price: arrayInput\r\n      }).then(res =>{\r\n         if (res.data.st === 'Oke'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Thêm!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n          \r\n         }\r\n      })\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         <Row style={{marginBottom: 25}}>\r\n            <AddBox style={{marginLeft: 18, color: 'blue',fontSize: 28 }} onClick={()=>toggle()} /><span > Thêm dịch vụ</span>\r\n         </Row>\r\n         {/* <Button color=\"primary\" >Cập nhật</Button> */}\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader toggle={toggle}>Thêm dịch vụ</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  <div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Tên dịch vụ</div>\r\n                        <Input placeholder=\"\" className='Input' id='nameService' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Loại dịch vụ</div>\r\n                        <Input placeholder=\"\" className='Input' id='type' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Mô tả</Label>\r\n                        <Input type=\"textarea\" placeholder=\"\" style={{ height: 100 }} id='discription' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='divInputPrice' >\r\n                           <Row>\r\n                              <Col md={11}>\r\n                                 <div>\r\n                                    <Label className='TitleName'>Giá (Chỉ tiêu : Giá)</Label>\r\n                                    <Input onChange={(e)=>handleChangeText(e)} id='value'  />\r\n                                 </div>\r\n                                 \r\n                              </Col>\r\n                           </Row>\r\n                        </div>\r\n                     </div>\r\n                  \r\n                     {arrayInput?.map((value, index) => (\r\n                        <div key={index} className='divInputPrice'>\r\n                           <Row>\r\n                              <Col md={11}>\r\n                                 <div>\r\n                                    <Label className='TitleName'>Giá (Chỉ tiêu : Giá)</Label>\r\n                                    <Input \r\n                                       // onChange={(e)=>handleChangeText(e)} \r\n                                       id={index}\r\n                                       value={arrayInput[index]?.value}\r\n                                       onChange={(value) => handleChange(value, index)}\r\n                                    />\r\n                                 </div>                                 \r\n                              </Col>\r\n                              <Col md={0.5} >\r\n                                 <div style={{ marginTop: 35}}>\r\n                                    <Close style={{ color: 'red',fontSize: 27 }} onClick={()=> handleChangeDel(index)} />\r\n                                 </div>\r\n                              </Col>\r\n                           </Row>\r\n                           <br></br>\r\n                        </div>\r\n                        ))}\r\n                        <AddBox style={{marginTop: 18, color: 'blue',fontSize: 27 }} onClick={() => setArrayInput((preState) => [...preState, {}])} />\r\n                        {/* <button onClick={() => console.log(text)}>Show</button> */}\r\n                  </div>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={\r\n                     ()=>{ toggle()\r\n                     AddService()}\r\n                  }>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalChangeService","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalAddStaff.js",["229","230","231","232","233","234","235"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text, Label, Row, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalAddService.css';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Close from '@material-ui/icons/Close'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalAddStaff = ( props ) =>{\r\n   \r\n   const [text, setText] = React.useState(\"\");\r\n   const [modal, setModal] = React.useState(false);\r\n   \r\n   const toggle = () =>{\r\n      setModal(!modal)\r\n   } \r\n   const [selectedFile, setSelectedFile] = React.useState();\r\n   const [ state, setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const handleChangeText = async(e)  =>{\r\n      setState({\r\n         ...state,\r\n         [e.target.id]: e.target.value\r\n      })\r\n   }\r\n\r\n   const handleChangeFile = (e) => {\r\n      setSelectedFile(e.target.files[0])\r\n\t};\r\n\r\n   const AddStaff = async() =>{\r\n      // console.log(state);\r\n      const config = {     \r\n         headers: { 'content-type': 'multipart/form-data' }\r\n      }\r\n      const formData = new FormData();\r\n\t\tformData.append('files', selectedFile);\r\n\t\t// formData.forEach(state);\r\n      for ( var key in state ) {\r\n         formData.append(key, state[key]);\r\n      }\r\n      await axios.post('http://localhost:216/staff/addStaff',formData,config).then(res =>{\r\n         if (res.data.status === 'Oke'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Thêm!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n         }else{\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'error',\r\n               title: 'Lỗi!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          })\r\n         }\r\n      })\r\n\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         <Row style={{marginBottom: 25}}>\r\n            <AddBox style={{marginLeft: 18, color: 'blue',fontSize: 28 }} onClick={()=>toggle()} /><span style={{fontWeight: 'bold', marginLeft: 5}} > Thêm nhân viên</span>\r\n         </Row>\r\n         {/* <Button color=\"primary\" >Cập nhật</Button> */}\r\n         <Modal isOpen={modal} toggle={toggle} >\r\n         <ModalHeader toggle={toggle}>Thêm nhân viên</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  <div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Tên nhân viên</div>\r\n                        <Input placeholder=\"\" className='Input' id='fullnameStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Ảnh nhân viên</div>\r\n                        <Input placeholder=\"\" type='file' className='Input' id='avatarStaff' onChange={(e)=>handleChangeFile(e)} /> \r\n                     </div>\r\n                     {/* <div className='divContainerInput'>\r\n                        <Label className='TitleName'>Mô tả</Label>\r\n                        <Input type=\"textarea\" placeholder=\"\" style={{ height: 100 }} id='discription' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div> */}\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Tên đăng nhập</div>\r\n                        <Input placeholder=\"\" className='Input' id='usernameStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Mật khẩu</div>\r\n                        <Input placeholder=\"\" className='Input' id='passwordStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Giới tính</div>\r\n                        <Input placeholder=\"\" type='select' className='Input' id='genderStaff' onChange={(e)=>handleChangeText(e)}>\r\n                           <option>Chọn giới tính</option>   \r\n                           <option>Nam</option>   \r\n                           <option>Nữ</option>   \r\n                           <option>Khác</option>   \r\n                        </Input> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Ngày Sinh</div>\r\n                        <Input placeholder=\"\" className='Input' id='birthdayStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Nơi Sinh</div>\r\n                        <Input placeholder=\"\" className='Input' id='birthPlace' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Số điện thoại</div>\r\n                        <Input placeholder=\"\" className='Input' id='numberPhone' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Địa chỉ</div>\r\n                        <Input placeholder=\"\" className='Input' id='addressStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Số chứng minh nhân dân</div>\r\n                        <Input placeholder=\"\" className='Input' id='IDCardStaff' onChange={(e)=>handleChangeText(e)} /> \r\n                     </div>\r\n                     <div className='divContainerInput'>\r\n                        <div className='TitleName'>Phân công bộ phận</div>\r\n                        <Input type='select' className='Input' id='department' onChange={(e)=>handleChangeText(e)} >\r\n                           <option value='Bộ phận Vệ sinh nhà' >Chọn bộ phận</option>\r\n                           <option value='Bộ phận Vệ sinh nhà' >Bộ phận Vệ sinh nhà</option>\r\n                           <option value='Bộ phận Nấu ăn'>Bộ phận Nấu ăn</option>\r\n                           <option value='Bộ phận Giặt ủi'>Bộ phận Giặt ủi</option>\r\n                        </Input>\r\n                     </div>\r\n                        {/* <AddBox style={{marginTop: 18, color: 'blue',fontSize: 27 }} onClick={() => setArrayInput((preState) => [...preState, {}])} /> */}\r\n                        {/* <button onClick={() => console.log(text)}>Show</button> */}\r\n                  </div>\r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={\r\n                     ()=>{ \r\n                     toggle()\r\n                     AddStaff()\r\n                     // console.log(state)\r\n                  }\r\n                  }>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalAddStaff","E:\\Final\\LV\\react-browser\\src\\components\\AdminStatisticalManagement.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"import React from 'react'\r\nimport '../styles/OrderAdmin.css'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport WashingSave from './WashingSaveService'\r\nimport CookingSave from './CookingSaveService'\r\nimport ClearSave from './ClearSaveService'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n      selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n}));\r\n\r\n\r\n\r\n\r\nconst AdminStatistical = () =>{\r\n   const [activeTab, setActiveTab] = React.useState('1');\r\n\r\n   const toggle = tab => {\r\n      if(activeTab !== tab) setActiveTab(tab);\r\n   }\r\n   const [state, setState] = React.useState({\r\n      order: '',\r\n      name: 'hai',\r\n    });\r\n   const [type, setType] = React.useState({\r\n      cooking: true,\r\n      housework: null,\r\n      washing: null,\r\n      farm: null\r\n   })\r\n   const classes = useStyles();\r\n   const handleChange = (event) => {\r\n      const name = event.target.name;\r\n      setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n      });\r\n      const option_val = event.target.value\r\n      if (option_val == 1){\r\n         setType({\r\n            cooking:true,\r\n            housework: null,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 2 ){\r\n         setType({\r\n            cooking:null,\r\n            housework: true,\r\n            washing: null,\r\n            farm: null\r\n         })\r\n      }else if (option_val==3){\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: true,\r\n            farm: null\r\n         })\r\n      }else if (option_val == 4)\r\n         setType({\r\n            cooking:null,\r\n            housework: null,\r\n            washing: null,\r\n            farm: true\r\n         })\r\n   }\r\n   \r\n\r\n\r\n   return(\r\n      <div className=\"ContainerAdminOrder\">\r\n          <Nav tabs>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({ active: activeTab === '1' })}\r\n                     onClick={() => { toggle('1'); }}\r\n                  >\r\n                     Nấu ăn\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({ active: activeTab === '2' })}\r\n                     onClick={() => { toggle('2'); }}\r\n                  >\r\n                     Dọn nhà\r\n                  </NavLink>\r\n               </NavItem>\r\n               <NavItem>\r\n                  <NavLink\r\n                     className={classnames({ active: activeTab === '3' })}\r\n                     onClick={() => { toggle('3'); }}\r\n                  >\r\n                     Giặt ủi\r\n                  </NavLink>\r\n               </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <Row>\r\n                     <Col >\r\n                        <Card>\r\n                           <ClearSave />\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <Card>\r\n                     <CookingSave />\r\n                  </Card>\r\n                     \r\n               </TabPane>\r\n               <TabPane tabId=\"3\">\r\n                  <Row>\r\n                     <Col>\r\n                        <Card>\r\n                          <WashingSave/>\r\n                        </Card>\r\n                     </Col>\r\n                    \r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n\r\n\r\n\r\n\r\n      </div>\r\n   )\r\n\r\n\r\n\r\n}\r\n\r\nexport default  AdminStatistical","E:\\Final\\LV\\react-browser\\src\\components\\CookingSaveService.js",["251","252","253","254","255","256"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CookingOrder = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataOrder();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataOrder = () =>{\r\n      Axios.get('http://localhost:216/cookingsave/dataCooking').then(res =>{\r\n         setData(res.data)  \r\n      })  \r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/cooking/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getDataOrder()\r\n      }\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: \"ID công việc\", field: 'idWork'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Số người ăn\", field: 'number'},\r\n      { title: 'Món ăn', field: 'dishList', render: rowData =>\r\n         rowData.dishList.map((dt, index)=> <p>{dt}</p>)\r\n      },\r\n      { title: 'Đi chợ', field: 'goMarket'},\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   const [dataStaff, setDataStaff] = useState({\r\n      arrs: []\r\n   })\r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Nấu ăn\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default CookingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\ClearSaveService.js",["257","258","259"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  CookingOrder = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataOrder();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataOrder = () =>{\r\n      Axios.get('http://localhost:216/clearsave/dataSaveClear').then(res =>{\r\n         setData(res.data)  \r\n      })  \r\n   }\r\n\r\n   // const handleChangeStatus = async(e) =>{\r\n   //    const status = e.target.value\r\n   //    const id = e.target[e.target.selectedIndex].id\r\n   //    const data = await Axios.post('http://localhost:216/cooking/changeStatus',{\r\n   //       id: id,\r\n   //       status : status \r\n   //    })\r\n   //    // getData()\r\n   //    if (data.data.notifi === \"Oke\"){\r\n   //       getDataOrder()\r\n   //    }\r\n   // }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: 'idWork'},\r\n      { title: 'Tên KH', field: 'username' },\r\n      { title: \"Diện tích\", field: 'area'},\r\n      { title: 'Giờ làm', field: 'timeWork'},\r\n      { title: 'Thời gian', field: 'timeStart'},\r\n      { title: 'Ngày', field: 'date', type: 'date'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   \r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Dọn nhà\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default CookingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\WashingSaveService.js",["260","261","262","263"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalWashing from './modals/ModalWashing'\r\n\r\n   const tableIcons = {\r\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n   };\r\n\r\n   const WashingOrder = () =>{\r\n      useEffect(()=>{\r\n         getData()\r\n      }, [])\r\n\r\n\r\n   const [data, setData] = useState([]);\r\n   \r\n   const getData = async() =>{\r\n      const data = await Axios.get('http://localhost:216/washingsave/dataSaveWashing')\r\n      // console.log(data.data);\r\n      setData(data.data)\r\n   }\r\n\r\n   const handleChangeStatus = async(e) =>{\r\n      const status = e.target.value\r\n      const id = e.target[e.target.selectedIndex].id\r\n      const data = await Axios.post('http://localhost:216/washing/changeStatus',{\r\n         id: id,\r\n         status : status \r\n      })\r\n      // getData()\r\n      if (data.data.notifi === \"Oke\"){\r\n         getData()\r\n      }\r\n   }\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: '_id'},\r\n      { title: 'Tên KH', field: 'fullname' },\r\n      { title: \"Ngày gửi\", field: 'dateSend', type: 'date'},\r\n      { title: 'Giờ gửi', field: 'timeSend'},\r\n      { title: \"Ngày nhận\", field: 'dateTake', type: 'date'},\r\n      { title: 'Giờ nhận', field: 'timeTake'},\r\n      { title: 'Ghi chú', field: 'note'},\r\n      { title: 'Địa chỉ', field: 'address' },\r\n      { title: 'Tổng tiền',  field: 'money'},\r\n   ]);\r\n\r\n\r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Giặt ủi\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default WashingOrder;","E:\\Final\\LV\\react-browser\\src\\components\\FeedbackFromCustomer.js",["264","265","266"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  Feedback = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataFeedback();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataFeedback = async() =>{\r\n      await Axios.get('http://localhost:216/feedback/getData').then(res =>{\r\n         setData(res.data)\r\n      })\r\n     \r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID đơn\", field: 'idWork'},\r\n      { title: 'Tên KH', field: 'nameUser' },\r\n      { title: 'Điểm', field: 'rate' },\r\n      { title: 'Nội dung',  field: 'contentfeedback'},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   \r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Đánh giá\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default Feedback;","E:\\Final\\LV\\react-browser\\src\\components\\ReportStaff.js",["267","268","269"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport MyComponent from './getDataStaffFree'\r\nimport ModalAssignment from './ModalAssignment'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const  ReportStaff = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataReport();\r\n      // getDataStaff();\r\n   },[])\r\n\r\n\r\n   const getDataReport = async() =>{\r\n      await Axios.get('http://localhost:216/report/getData').then(res =>{\r\n         setData(res.data)\r\n      })\r\n     \r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID Nhân viên\", field: 'idStaff'},\r\n      { title: 'ID Khách hàng', field: 'idUser' },\r\n      { title: 'ID công việc', field: 'idWork' },\r\n      { title: 'Nội dung',  field: 'note'},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   \r\n   \r\n   return (\r\n      <div>\r\n         {/* <button onClick={()=>console.log(dataStaff.arrs)}>aaaaaaa</button> */}\r\n         <MaterialTable\r\n         title=\"Báo cáo nhân viên\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default ReportStaff;","E:\\Final\\LV\\react-browser\\src\\components\\SalaryStaff.js",["270","271"],"import React, { useState, forwardRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { Table , List, Button, Card, Col} from 'reactstrap';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { useEffect } from 'react';\r\nimport ModalUpdate from './modals/ModalUpdateSalary'\r\nimport '../styles/SalaryStaff.css'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  const  SalaryStaff = ( props ) => {\r\n\r\n   useEffect(()=>{\r\n      getDataSalary()\r\n      getDataSalaryStaff()\r\n      // getDataStaff();\r\n   },[])\r\n\r\n   const getDataSalary = async() =>{\r\n      await Axios.get('http://localhost:216/salary/getDataSalary').then(res =>{\r\n         setDataSalary(res.data)\r\n      })     \r\n   }\r\n\r\n   const getDataSalaryStaff = async() =>{\r\n      await Axios.get('http://localhost:216/salary/getData').then(res =>{\r\n         setData(res.data)\r\n      })\r\n   }\r\n\r\n   const count = async() =>{\r\n      await Axios.post('http://localhost:216/salary/countSalary',{\r\n         request: 'Oke'\r\n      }).then(result =>{\r\n         if (result.data.status==='Create Salary Successfully!'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã tính!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n         }else{\r\n            Swal.fire({\r\n               icon: 'error',\r\n               title: 'Fail...',\r\n               text: 'Lương chưa được tính!',\r\n               // footer: '<a href>Why do I have this issue?</a>'\r\n             }).then(()=>window.location.reload())\r\n         }\r\n      }).catch(err=>{\r\n\r\n      })\r\n   }\r\n\r\n   const  [columns, setColumns] = useState([\r\n      { title: \"ID Nhân viên\", field: 'idStaff'},\r\n      { title: 'Tên Nhân viên', field: 'nameStaff' },\r\n      { title: 'Bộ phận', field: 'department' },\r\n      { title: 'Nghỉ', field: 'absent' },\r\n      { title: 'Việc', field: 'work' },\r\n      { title: 'Tổng nhận',  field: 'salary',type:'currency', currencySetting:{ locale: 'vi',currencyCode:'VND', minimumFractionDigits:0, maximumFractionDigits:2}},\r\n   ]);\r\n   const [data, setData] = useState([]);\r\n   const [dataSalary, setDataSalary] = useState([]);\r\n   \r\n   \r\n   return (\r\n      <div>\r\n         <div className='dicription'>\r\n         {\r\n            dataSalary.map(dt =>(\r\n            <>\r\n               <div>\r\n                  <Col sm=\"3\">\r\n                     <Card>\r\n                     <List type=\"unstyled\">\r\n                        <li>Qui ước tính lương \r\n                        \r\n                              <ul>\r\n                                 <li>Chỉ tiêu trên tháng: {dt.target} việc</li>\r\n                                 <li>1 việc bằng: {dt.work} VNĐ</li>\r\n                                 <li>1 việc vượt chỉ tiêu: {dt.bonus} * 150000</li>\r\n                                 <li>Nghỉ: {dt.absent} * 150000</li>\r\n                                 <li>Tổng: việc + việc vượt chỉ tiêu - nghỉ - phạt </li>\r\n                              </ul>\r\n                        </li>\r\n                     </List>\r\n                        <div style={{ margin: \"auto\", marginBottom: '10px'}}>\r\n                           <ModalUpdate id = { dt._id } /> \r\n                        </div>\r\n                     </Card>\r\n                  </Col>\r\n               </div>\r\n            </>\r\n            ))\r\n         }\r\n         </div>\r\n         <div style={{marginBottom: '10px'}}>\r\n            <Button onClick={()=>count() } color=\"danger\" >Tính lương</Button>\r\n         </div>\r\n           \r\n         <MaterialTable\r\n         title=\"Lương nhân viên\"\r\n         icons={tableIcons}\r\n         columns={columns}\r\n         data={data}\r\n         editable={{\r\n            // onRowAdd: newData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       setData([...data, newData]);\r\n            //       Axios.post('http://localhost:216/staff/addStaff', \r\n            //          newData\r\n            //       )\r\n            //       resolve();\r\n            //     }, 1000)\r\n            //   }),\r\n\r\n            onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n               setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n                     Axios.post('http://localhost:216/staff/updatedataStaff',\r\n                        newData\r\n                     )\r\n                  resolve();\r\n               }, 1000)\r\n            }),\r\n\r\n            //   onRowDelete: oldData =>\r\n            //   new Promise((resolve, reject) => {\r\n            //       setTimeout(() => {\r\n            //           const dataDelete = [...data];\r\n            //           const index = oldData.tableData.id;\r\n            //           dataDelete.splice(index, 1);\r\n            //           setData([...dataDelete]);\r\n            //             const idStaff = oldData._id;\r\n            //             Axios.get('http://localhost:216/staff/delStaff/id='+idStaff).then(res =>{\r\n            //                // getDataStaff()\r\n            //             })\r\n            //           resolve();\r\n            //       }, 1000);\r\n            //   })\r\n            }}\r\n         />\r\n         \r\n      </div>\r\n\r\n   )\r\n }\r\n\r\n\r\n export default SalaryStaff;","E:\\Final\\LV\\react-browser\\src\\components\\modals\\ModalUpdateSalary.js",["272","273","274","275","276","277","278"],"import React from 'react'\r\nimport  { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Text ,Label} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport '../../styles/ModalChangeService.css'\r\nimport { Checkbox } from '@material-ui/core';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ModalUpdateSalary = ( props ) =>{\r\n   const {\r\n      buttonLabel,\r\n      className\r\n   } = props;\r\n   const [modal, setModal] = React.useState(false);\r\n   const toggle = () =>{\r\n      // console.log(props.id)\r\n      setModal(!modal)\r\n      // getDataStaff()\r\n   } \r\n\r\n   const [ state,setState ] = React.useState([])\r\n   \r\n   React.useEffect(()=>{\r\n      // getDataSalary()\r\n      // getDataStaff()\r\n   },[])\r\n\r\n   const [idStaff, setIDStaff] = React.useState([])\r\n   const [dataUpdate, setDataUpdate] = React.useState([  ])\r\n   const [dataSalary, setDataSalary] = React.useState([])\r\n   \r\n\r\n   // const getDataServiceById = async() =>{\r\n   //    // console.log('aaa')\r\n   //    const id = props.data.id\r\n   //    console.log(id);\r\n   //    await axios.get('http://localhost:216/service/dataServiceByID/id='+id)\r\n   //    .then(res =>{\r\n   //       setState(res.data)\r\n   //    })\r\n   // }\r\n\r\n   const getDataSalary = async() =>{\r\n      await axios.get('http://localhost:216/salary/getDataSalary').then(res =>{\r\n         setDataSalary(res.data)\r\n         // console.log(res.data);\r\n      })     \r\n   }\r\n\r\n   const handleChange = async( e ) =>{\r\n      console.log(e.target.value)\r\n      setDataUpdate({\r\n         ...dataUpdate,\r\n         [e.target.id] : e.target.value\r\n      })\r\n   }\r\n\r\n   const sendDataUpdateById = async( ) =>{\r\n      const id = props.id\r\n      const dataSendUpdate = dataUpdate\r\n      // console.log(dataSendUpdate);\r\n      await axios.post('http://localhost:216/salary/updateSalary',{\r\n         id : id,\r\n         data :dataSendUpdate\r\n      }).then(res =>{\r\n         if (res.data.Update === 'Update salary successfully!'){\r\n            Swal.fire({\r\n               position: 'top',\r\n               icon: 'success',\r\n               title: 'Đã Cập nhật!',\r\n               showConfirmButton: false,\r\n               timer: 1500\r\n          }).then(()=>window.location.reload())\r\n         }\r\n      })\r\n      \r\n      \r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <Button color=\"primary\" \r\n            onClick={()=>{toggle()\r\n            getDataSalary()}\r\n         }>Cập nhật</Button>\r\n         <Modal isOpen={modal} toggle={toggle} className={className}>\r\n         <ModalHeader  toggle={toggle}>Cập nhật dịch vụ</ModalHeader>\r\n         {/* <Button color=\"primary\" onClick={()=>console.log(idStaff)}>Danh sách</Button> */}\r\n            <ModalBody>\r\n               <div className=\"Container\">\r\n                  {\r\n                     dataSalary.map(dataSalary =>(\r\n                     <div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>Chỉ tiêu việc/tháng</Label>\r\n                           <Input placeholder={dataSalary.target} id='target' onChange={(val) => handleChange(val)}  className='Input'/> \r\n                        </div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>Lương trên việc</Label>\r\n                           <Input placeholder={dataSalary.work} id='work' onChange={(val) => handleChange(val)}   /> \r\n                        </div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>Việc vượt chỉ tiêu</Label>\r\n                           <Input placeholder={dataSalary.bonus} id='bonus' onChange={(val) => handleChange(val)}  /> \r\n                        </div>\r\n                        <div className='divContainerInput'>\r\n                           <Label className='TitleName'>Nghỉ</Label>\r\n                           <Input placeholder={dataSalary.absent} id='absent' onChange={(val) => handleChange(val)} /> \r\n                        </div>\r\n                     </div>\r\n                     ))\r\n                  }\r\n                  \r\n               </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" \r\n                  onClick={()=>{\r\n                     toggle()\r\n                     sendDataUpdateById()\r\n               }}>Đồng ý</Button>\r\n               <Button color=\"secondary\" onClick={()=>toggle()}>Trở lại</Button>\r\n               {/* <Button color=\"primary\" onClick={()=>console.log(dataUpdate)}>Đồng ý</Button> */}\r\n            </ModalFooter>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\nexport default ModalUpdateSalary",{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":26},{"ruleId":"283","severity":1,"message":"287","line":6,"column":8,"nodeType":"285","messageId":"286","endLine":6,"endColumn":30},{"ruleId":"283","severity":1,"message":"288","line":13,"column":8,"nodeType":"285","messageId":"286","endLine":13,"endColumn":19},{"ruleId":"283","severity":1,"message":"289","line":3,"column":27,"nodeType":"285","messageId":"286","endLine":3,"endColumn":32},{"ruleId":"283","severity":1,"message":"290","line":3,"column":34,"nodeType":"285","messageId":"286","endLine":3,"endColumn":40},{"ruleId":"283","severity":1,"message":"287","line":4,"column":8,"nodeType":"285","messageId":"286","endLine":4,"endColumn":30},{"ruleId":"283","severity":1,"message":"291","line":15,"column":11,"nodeType":"285","messageId":"286","endLine":15,"endColumn":17},{"ruleId":"283","severity":1,"message":"292","line":15,"column":19,"nodeType":"285","messageId":"286","endLine":15,"endColumn":28},{"ruleId":"283","severity":1,"message":"293","line":17,"column":10,"nodeType":"285","messageId":"286","endLine":17,"endColumn":16},{"ruleId":"283","severity":1,"message":"294","line":60,"column":21,"nodeType":"285","messageId":"286","endLine":60,"endColumn":31},{"ruleId":"283","severity":1,"message":"295","line":1,"column":17,"nodeType":"285","messageId":"286","endLine":1,"endColumn":25},{"ruleId":"283","severity":1,"message":"296","line":4,"column":10,"nodeType":"285","messageId":"286","endLine":4,"endColumn":20},{"ruleId":"283","severity":1,"message":"297","line":11,"column":10,"nodeType":"285","messageId":"286","endLine":11,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":16,"column":6,"nodeType":"300","endLine":16,"endColumn":8,"suggestions":"301"},{"ruleId":"283","severity":1,"message":"302","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"303","line":5,"column":63,"nodeType":"285","messageId":"286","endLine":5,"endColumn":70},{"ruleId":"283","severity":1,"message":"304","line":5,"column":71,"nodeType":"285","messageId":"286","endLine":5,"endColumn":77},{"ruleId":"283","severity":1,"message":"305","line":5,"column":79,"nodeType":"285","messageId":"286","endLine":5,"endColumn":82},{"ruleId":"283","severity":1,"message":"306","line":5,"column":84,"nodeType":"285","messageId":"286","endLine":5,"endColumn":91},{"ruleId":"283","severity":1,"message":"307","line":6,"column":8,"nodeType":"285","messageId":"286","endLine":6,"endColumn":14},{"ruleId":"283","severity":1,"message":"308","line":12,"column":8,"nodeType":"285","messageId":"286","endLine":12,"endColumn":17},{"ruleId":"283","severity":1,"message":"309","line":13,"column":8,"nodeType":"285","messageId":"286","endLine":13,"endColumn":16},{"ruleId":"283","severity":1,"message":"310","line":17,"column":8,"nodeType":"285","messageId":"286","endLine":17,"endColumn":16},{"ruleId":"283","severity":1,"message":"311","line":34,"column":11,"nodeType":"285","messageId":"286","endLine":34,"endColumn":23},{"ruleId":"283","severity":1,"message":"312","line":35,"column":10,"nodeType":"285","messageId":"286","endLine":35,"endColumn":16},{"ruleId":"283","severity":1,"message":"294","line":56,"column":21,"nodeType":"285","messageId":"286","endLine":56,"endColumn":31},{"ruleId":"283","severity":1,"message":"313","line":72,"column":10,"nodeType":"285","messageId":"286","endLine":72,"endColumn":18},{"ruleId":"283","severity":1,"message":"294","line":56,"column":21,"nodeType":"285","messageId":"286","endLine":56,"endColumn":31},{"ruleId":"283","severity":1,"message":"314","line":2,"column":8,"nodeType":"285","messageId":"286","endLine":2,"endColumn":19},{"ruleId":"283","severity":1,"message":"315","line":4,"column":8,"nodeType":"285","messageId":"286","endLine":4,"endColumn":18},{"ruleId":"283","severity":1,"message":"316","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":22},{"ruleId":"283","severity":1,"message":"317","line":6,"column":8,"nodeType":"285","messageId":"286","endLine":6,"endColumn":14},{"ruleId":"283","severity":1,"message":"318","line":7,"column":8,"nodeType":"285","messageId":"286","endLine":7,"endColumn":20},{"ruleId":"283","severity":1,"message":"307","line":9,"column":60,"nodeType":"285","messageId":"286","endLine":9,"endColumn":66},{"ruleId":"283","severity":1,"message":"319","line":9,"column":68,"nodeType":"285","messageId":"286","endLine":9,"endColumn":77},{"ruleId":"283","severity":1,"message":"320","line":9,"column":79,"nodeType":"285","messageId":"286","endLine":9,"endColumn":87},{"ruleId":"283","severity":1,"message":"321","line":43,"column":11,"nodeType":"285","messageId":"286","endLine":43,"endColumn":15},{"ruleId":"283","severity":1,"message":"322","line":49,"column":10,"nodeType":"285","messageId":"286","endLine":49,"endColumn":17},{"ruleId":"283","severity":1,"message":"323","line":50,"column":10,"nodeType":"285","messageId":"286","endLine":50,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":57,"column":22,"nodeType":"326","messageId":"327","endLine":57,"endColumn":24},{"ruleId":"324","severity":1,"message":"325","line":64,"column":28,"nodeType":"326","messageId":"327","endLine":64,"endColumn":30},{"ruleId":"324","severity":1,"message":"325","line":71,"column":27,"nodeType":"326","messageId":"327","endLine":71,"endColumn":29},{"ruleId":"324","severity":1,"message":"325","line":78,"column":28,"nodeType":"326","messageId":"327","endLine":78,"endColumn":30},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"294","line":72,"column":21,"nodeType":"285","messageId":"286","endLine":72,"endColumn":31},{"ruleId":"283","severity":1,"message":"328","line":109,"column":11,"nodeType":"285","messageId":"286","endLine":109,"endColumn":20},{"ruleId":"283","severity":1,"message":"329","line":109,"column":22,"nodeType":"285","messageId":"286","endLine":109,"endColumn":34},{"ruleId":"283","severity":1,"message":"330","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"331","line":9,"column":7,"nodeType":"285","messageId":"286","endLine":9,"endColumn":18},{"ruleId":"283","severity":1,"message":"332","line":25,"column":11,"nodeType":"285","messageId":"286","endLine":25,"endColumn":18},{"ruleId":"283","severity":1,"message":"333","line":25,"column":20,"nodeType":"285","messageId":"286","endLine":25,"endColumn":30},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"294","line":67,"column":21,"nodeType":"285","messageId":"286","endLine":67,"endColumn":31},{"ruleId":"283","severity":1,"message":"330","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"331","line":9,"column":7,"nodeType":"285","messageId":"286","endLine":9,"endColumn":18},{"ruleId":"283","severity":1,"message":"332","line":25,"column":11,"nodeType":"285","messageId":"286","endLine":25,"endColumn":18},{"ruleId":"283","severity":1,"message":"333","line":25,"column":20,"nodeType":"285","messageId":"286","endLine":25,"endColumn":30},{"ruleId":"279","replacedBy":"334"},{"ruleId":"281","replacedBy":"335"},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"294","line":70,"column":21,"nodeType":"285","messageId":"286","endLine":70,"endColumn":31},{"ruleId":"283","severity":1,"message":"330","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"331","line":9,"column":7,"nodeType":"285","messageId":"286","endLine":9,"endColumn":18},{"ruleId":"283","severity":1,"message":"332","line":25,"column":11,"nodeType":"285","messageId":"286","endLine":25,"endColumn":18},{"ruleId":"283","severity":1,"message":"333","line":25,"column":20,"nodeType":"285","messageId":"286","endLine":25,"endColumn":30},{"ruleId":"283","severity":1,"message":"336","line":2,"column":70,"nodeType":"285","messageId":"286","endLine":2,"endColumn":74},{"ruleId":"283","severity":1,"message":"330","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"331","line":10,"column":7,"nodeType":"285","messageId":"286","endLine":10,"endColumn":18},{"ruleId":"283","severity":1,"message":"332","line":26,"column":11,"nodeType":"285","messageId":"286","endLine":26,"endColumn":18},{"ruleId":"283","severity":1,"message":"333","line":26,"column":20,"nodeType":"285","messageId":"286","endLine":26,"endColumn":30},{"ruleId":"283","severity":1,"message":"336","line":2,"column":70,"nodeType":"285","messageId":"286","endLine":2,"endColumn":74},{"ruleId":"283","severity":1,"message":"330","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"331","line":12,"column":7,"nodeType":"285","messageId":"286","endLine":12,"endColumn":18},{"ruleId":"283","severity":1,"message":"337","line":17,"column":11,"nodeType":"285","messageId":"286","endLine":17,"endColumn":15},{"ruleId":"283","severity":1,"message":"336","line":2,"column":70,"nodeType":"285","messageId":"286","endLine":2,"endColumn":74},{"ruleId":"283","severity":1,"message":"338","line":2,"column":76,"nodeType":"285","messageId":"286","endLine":2,"endColumn":81},{"ruleId":"283","severity":1,"message":"339","line":2,"column":88,"nodeType":"285","messageId":"286","endLine":2,"endColumn":91},{"ruleId":"283","severity":1,"message":"330","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"340","line":7,"column":8,"nodeType":"285","messageId":"286","endLine":7,"endColumn":13},{"ruleId":"283","severity":1,"message":"337","line":12,"column":11,"nodeType":"285","messageId":"286","endLine":12,"endColumn":15},{"ruleId":"283","severity":1,"message":"341","line":12,"column":17,"nodeType":"285","messageId":"286","endLine":12,"endColumn":24},{"ruleId":"283","severity":1,"message":"314","line":3,"column":8,"nodeType":"285","messageId":"286","endLine":3,"endColumn":19},{"ruleId":"283","severity":1,"message":"315","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"316","line":6,"column":8,"nodeType":"285","messageId":"286","endLine":6,"endColumn":22},{"ruleId":"283","severity":1,"message":"317","line":7,"column":8,"nodeType":"285","messageId":"286","endLine":7,"endColumn":14},{"ruleId":"283","severity":1,"message":"318","line":8,"column":8,"nodeType":"285","messageId":"286","endLine":8,"endColumn":20},{"ruleId":"283","severity":1,"message":"307","line":10,"column":60,"nodeType":"285","messageId":"286","endLine":10,"endColumn":66},{"ruleId":"283","severity":1,"message":"319","line":10,"column":68,"nodeType":"285","messageId":"286","endLine":10,"endColumn":77},{"ruleId":"283","severity":1,"message":"320","line":10,"column":79,"nodeType":"285","messageId":"286","endLine":10,"endColumn":87},{"ruleId":"283","severity":1,"message":"321","line":40,"column":11,"nodeType":"285","messageId":"286","endLine":40,"endColumn":15},{"ruleId":"283","severity":1,"message":"322","line":46,"column":10,"nodeType":"285","messageId":"286","endLine":46,"endColumn":17},{"ruleId":"283","severity":1,"message":"323","line":47,"column":10,"nodeType":"285","messageId":"286","endLine":47,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":54,"column":22,"nodeType":"326","messageId":"327","endLine":54,"endColumn":24},{"ruleId":"324","severity":1,"message":"325","line":61,"column":28,"nodeType":"326","messageId":"327","endLine":61,"endColumn":30},{"ruleId":"324","severity":1,"message":"325","line":68,"column":27,"nodeType":"326","messageId":"327","endLine":68,"endColumn":29},{"ruleId":"324","severity":1,"message":"325","line":75,"column":28,"nodeType":"326","messageId":"327","endLine":75,"endColumn":30},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"342","line":22,"column":8,"nodeType":"285","messageId":"286","endLine":22,"endColumn":23},{"ruleId":"283","severity":1,"message":"343","line":59,"column":10,"nodeType":"285","messageId":"286","endLine":59,"endColumn":28},{"ruleId":"283","severity":1,"message":"294","line":72,"column":21,"nodeType":"285","messageId":"286","endLine":72,"endColumn":31},{"ruleId":"283","severity":1,"message":"328","line":87,"column":11,"nodeType":"285","messageId":"286","endLine":87,"endColumn":20},{"ruleId":"283","severity":1,"message":"329","line":87,"column":22,"nodeType":"285","messageId":"286","endLine":87,"endColumn":34},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"342","line":22,"column":8,"nodeType":"285","messageId":"286","endLine":22,"endColumn":23},{"ruleId":"283","severity":1,"message":"294","line":72,"column":21,"nodeType":"285","messageId":"286","endLine":72,"endColumn":31},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"344","line":22,"column":8,"nodeType":"285","messageId":"286","endLine":22,"endColumn":20},{"ruleId":"283","severity":1,"message":"343","line":58,"column":10,"nodeType":"285","messageId":"286","endLine":58,"endColumn":28},{"ruleId":"283","severity":1,"message":"294","line":70,"column":21,"nodeType":"285","messageId":"286","endLine":70,"endColumn":31},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"342","line":22,"column":8,"nodeType":"285","messageId":"286","endLine":22,"endColumn":23},{"ruleId":"283","severity":1,"message":"294","line":60,"column":21,"nodeType":"285","messageId":"286","endLine":60,"endColumn":31},{"ruleId":"283","severity":1,"message":"288","line":21,"column":8,"nodeType":"285","messageId":"286","endLine":21,"endColumn":19},{"ruleId":"283","severity":1,"message":"342","line":22,"column":8,"nodeType":"285","messageId":"286","endLine":22,"endColumn":23},{"ruleId":"283","severity":1,"message":"294","line":60,"column":21,"nodeType":"285","messageId":"286","endLine":60,"endColumn":31},{"ruleId":"283","severity":1,"message":"345","line":3,"column":10,"nodeType":"285","messageId":"286","endLine":3,"endColumn":15},{"ruleId":"283","severity":1,"message":"294","line":90,"column":21,"nodeType":"285","messageId":"286","endLine":90,"endColumn":31},{"ruleId":"283","severity":1,"message":"336","line":2,"column":70,"nodeType":"285","messageId":"286","endLine":2,"endColumn":74},{"ruleId":"283","severity":1,"message":"330","line":5,"column":10,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"331","line":10,"column":7,"nodeType":"285","messageId":"286","endLine":10,"endColumn":18},{"ruleId":"283","severity":1,"message":"346","line":20,"column":12,"nodeType":"285","messageId":"286","endLine":20,"endColumn":17},{"ruleId":"283","severity":1,"message":"347","line":20,"column":18,"nodeType":"285","messageId":"286","endLine":20,"endColumn":26},{"ruleId":"283","severity":1,"message":"332","line":27,"column":11,"nodeType":"285","messageId":"286","endLine":27,"endColumn":18},{"ruleId":"283","severity":1,"message":"333","line":27,"column":20,"nodeType":"285","messageId":"286","endLine":27,"endColumn":30},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"no-unused-vars","'BrowserHeaderAdmin' is defined but never used.","Identifier","unusedVar","'AdminServiceManagement' is defined but never used.","'MyComponent' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'LogOut' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["350"],"'Dropdown' is defined but never used.","'NavLink' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'Button' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'dropdownOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'addStaff' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","'NativeSelect' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'type' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dataStaff' is assigned a value but never used.","'setDataStaff' is assigned a value but never used.","'Checkbox' is defined but never used.","'buttonLabel' is assigned a value but never used.","'idStaff' is assigned a value but never used.","'setIDStaff' is assigned a value but never used.",["348"],["349"],"'Text' is defined but never used.","'text' is assigned a value but never used.","'Label' is defined but never used.","'Col' is defined but never used.","'Close' is defined but never used.","'setText' is assigned a value but never used.","'ModalAssignment' is defined but never used.","'handleChangeStatus' is assigned a value but never used.","'ModalWashing' is defined but never used.","'Table' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"351","fix":"352"},"Update the dependencies array to be: [props.history]",{"range":"353","text":"354"},[488,490],"[props.history]"]